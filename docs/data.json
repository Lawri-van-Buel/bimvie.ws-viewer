{
    "project": {
        "name": "bimviews",
        "description": "A WebGL-based IFC Viewer for BIMSurfer",
        "version": "2.0.0",
        "url": "http://bimwiews.org/",
        "logo": "../assets/images/logo.png"
    },
    "files": {
        "src/core/animate/cameraFlyAnimation.js": {
            "name": "src/core/animate/cameraFlyAnimation.js",
            "modules": {},
            "classes": {
                "Fly": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/animate/cameraPathAnimation.js": {
            "name": "src/core/animate/cameraPathAnimation.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/camera/camera.js": {
            "name": "src/core/camera/camera.js",
            "modules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/canvas/canvas.js": {
            "name": "src/core/canvas/canvas.js",
            "modules": {},
            "classes": {
                "Canvas": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/cameraControl.js": {
            "name": "src/core/control/cameraControl.js",
            "modules": {},
            "classes": {
                "CameraControl": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/clickSelectObjects.js": {
            "name": "src/core/control/clickSelectObjects.js",
            "modules": {},
            "classes": {
                "ClickSelectObjects": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/keyboardAxisCamera.js": {
            "name": "src/core/control/keyboardAxisCamera.js",
            "modules": {},
            "classes": {
                "KeyboardAxisCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/keyboardOrbitCamera.js": {
            "name": "src/core/control/keyboardOrbitCamera.js",
            "modules": {},
            "classes": {
                "KeyboardOrbitCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/keyboardPanCamera.js": {
            "name": "src/core/control/keyboardPanCamera.js",
            "modules": {},
            "classes": {
                "KeyboardPanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/keyboardZoomCamera.js": {
            "name": "src/core/control/keyboardZoomCamera.js",
            "modules": {},
            "classes": {
                "KeyboardZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/mouseOrbitCamera.js": {
            "name": "src/core/control/mouseOrbitCamera.js",
            "modules": {},
            "classes": {
                "MouseOrbitCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/mousePanCamera.js": {
            "name": "src/core/control/mousePanCamera.js",
            "modules": {},
            "classes": {
                "MousePanCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/control/mouseZoomCamera.js": {
            "name": "src/core/control/mouseZoomCamera.js",
            "modules": {},
            "classes": {
                "MouseZoomCamera": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/effect/effect.js": {
            "name": "src/core/effect/effect.js",
            "modules": {},
            "classes": {
                "Effect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/effect/highlightEffect.js": {
            "name": "src/core/effect/highlightEffect.js",
            "modules": {},
            "classes": {
                "HighlightEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/effect/isolateEffect.js": {
            "name": "src/core/effect/isolateEffect.js",
            "modules": {},
            "classes": {
                "IsolateEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/effect/xrayEffect.js": {
            "name": "src/core/effect/xrayEffect.js",
            "modules": {},
            "classes": {
                "XRayEffect": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/geometry/boxGeometry.js": {
            "name": "src/core/geometry/boxGeometry.js",
            "modules": {},
            "classes": {
                "BoxGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/geometry/geometry.js": {
            "name": "src/core/geometry/geometry.js",
            "modules": {},
            "classes": {
                "Geometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/geometry/teapotGeometry.js": {
            "name": "src/core/geometry/teapotGeometry.js",
            "modules": {},
            "classes": {
                "TeapotGeometry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/input/input.js": {
            "name": "src/core/input/input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/light/ambientLight.js": {
            "name": "src/core/light/ambientLight.js",
            "modules": {},
            "classes": {
                "AmbientLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/light/dirLight.js": {
            "name": "src/core/light/dirLight.js",
            "modules": {},
            "classes": {
                "DirLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/light/light.js": {
            "name": "src/core/light/light.js",
            "modules": {},
            "classes": {
                "Light": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/light/pointLight.js": {
            "name": "src/core/light/pointLight.js",
            "modules": {},
            "classes": {
                "PointLight": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/math/math.js": {
            "name": "src/core/math/math.js",
            "modules": {},
            "classes": {
                "math": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/object/boxObject.js": {
            "name": "src/core/object/boxObject.js",
            "modules": {},
            "classes": {
                "BoxObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/object/object.js": {
            "name": "src/core/object/object.js",
            "modules": {},
            "classes": {
                "Object": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/object/objectSet.js": {
            "name": "src/core/object/objectSet.js",
            "modules": {},
            "classes": {
                "ObjectSet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/object/teapotObject.js": {
            "name": "src/core/object/teapotObject.js",
            "modules": {},
            "classes": {
                "TeapotObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/util/map.js": {
            "name": "src/core/util/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/BIMSURFER.js": {
            "name": "src/core/BIMSURFER.js",
            "modules": {},
            "classes": {
                "BIMSURFER": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/component.js": {
            "name": "src/core/component.js",
            "modules": {
                "BIMSURFER": 1
            },
            "classes": {
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/configs.js": {
            "name": "src/core/configs.js",
            "modules": {},
            "classes": {
                "Configs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/core/constants.js": {
            "name": "src/core/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/core/viewer.js": {
            "name": "src/core/viewer.js",
            "modules": {},
            "classes": {
                "Viewer": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "BIMSURFER": {
            "name": "BIMSURFER",
            "submodules": {
                "animate": 1,
                "camera": 1,
                "control": 1,
                "effect": 1,
                "geometry": 1,
                "input": 1
            },
            "classes": {
                "Fly": 1,
                "Camera": 1,
                "Canvas": 1,
                "CameraControl": 1,
                "ClickSelectObjects": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardOrbitCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardZoomCamera": 1,
                "MouseOrbitCamera": 1,
                "MousePanCamera": 1,
                "MouseZoomCamera": 1,
                "Effect": 1,
                "HighlightEffect": 1,
                "IsolateEffect": 1,
                "XRayEffect": 1,
                "BoxGeometry": 1,
                "Geometry": 1,
                "TeapotGeometry": 1,
                "Input": 1,
                "AmbientLight": 1,
                "DirLight": 1,
                "Light": 1,
                "PointLight": 1,
                "math": 1,
                "BoxObject": 1,
                "Object": 1,
                "ObjectSet": 1,
                "TeapotObject": 1,
                "BIMSURFER": 1,
                "Component": 1,
                "Configs": 1,
                "Viewer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/core/viewer.js",
            "line": 1,
            "description": "**Component** is the base class for all components within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n<hr>\n*Contents*\n<Ul>\n <li><a href=\"#ids\">Component IDs</a></li>\n <li><a href=\"#componentProps\">Properties</a></li>\n <li><a href=\"#metadata\">Metadata</a></li>\n <li><a href=\"#logging\">Logging</a></li>\n <li><a href=\"#destruction\">Destruction</a></li>\n </ul>\n<hr>\n## <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Viewer\"}}{{/crossLink}}. the {{#crossLink \"Viewer\"}}{{/crossLink}} generates\n the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n viewer comprised of {{#crossLink \"Viewer\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n {{#crossLink \"GameObject\"}}{{/crossLink}} components, while letting xeoEngine generate its own ID for\n the {{#crossLink \"Geometry\"}}{{/crossLink}}:\n````javascript\n````\n## <a name=\"componentProps\">Properties</a>\nAlmost every property on a xeoEngine Component fires a change event when you update it. For example, we can subscribe\n to the {{#crossLink \"Material/diffuse:event\"}}{{/crossLink}} event that a\n {{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}}\n property is updated, like so:\n````javascript\n // Bind a change callback to a property\n var handle = material.on(\"diffuse\", function(diffuse) {\n    console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n// Change the property value, which fires the callback\n material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n material.off(handle);\n ````\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\n of other components. For example, we can subscribe to the '{{#crossLink \"GameObject/material:event\"}}{{/crossLink}}' event that a\n {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"GameObject/material:property\"}}{{/crossLink}}\n property is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n```` javascript\n // Bind a change callback to the GameObject's Material\n object1.on(\"material\", function(material) {\n    console.log(\"GameObject's Material has changed to: \" + material.id);\n});\n// Now replace that Material with another\n object1.material = new BIMSURFER.Material({\n    id: \"myOtherMaterial\",\n    diffuse: [ 0.3, 0.3, 0.6 ]\n    //..\n});\n ````\n## <a name=\"metadata\">Metadata</a>\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\n to help manage your components within your application code or content pipeline. You could use metadata to attach\n authoring or version information, like this:\n````javascript\n // Viewer with authoring metadata\n var viewer = new BIMSURFER.Viewer({\n    id: \"myViewer\",\n    metadata: {\n        title: \"My awesome 3D viewer\",\n        author: \"@xeolabs\",\n date: \"February 13 2015\"\n }\n });\n// Material with descriptive metadata\n var material = new BIMSURFER.Material(viewer, {\n    id: \"myMaterial\",\n    diffuse: [1, 0, 0],\n    metadata: {\n        description: \"Bright red color with no textures\",\n        version: \"0.1\",\n        foo: \"bar\"\n    }\n});\n ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n // Subscribe to changes to the Material's metadata\n material.on(\"metadata\", function(value) {\n    console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n// Change the Material's metadata, firing our change handler\n material.metadata = {\n    description: \"Bright red color with no textures\",\n    version: \"0.2\",\n    foo: \"baz\"\n};\n ````\n## <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n material.log(\"Everything is fine, situation normal.\");\n material.warn(\"Wait, whats that red light?\");\n material.error(\"Aw, snap!\");\n ````\nThe logged messages will look like this in the console:\n````text\n [LOG]   myMaterial: Everything is fine, situation normal.\n [WARN]  myMaterial: Wait, whats that red light..\n [ERROR] myMaterial: Aw, snap!\n ````\n## <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n material.on(\"destroyed\", function() {\n    this.log(\"Component was destroyed: \" + this.id);\n});\n ````\nOr get notification of destruction of any Component within its {{#crossLink \"Viewer\"}}{{/crossLink}}, indiscriminately:\n````javascript\n viewer.on(\"componentDestroyed\", function(component) {\n    this.log(\"Component was destroyed: \" + component.id);\n});\n ````\nThen destroy a component like this:\n````javascript\n material.destroy();\n ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n will then automatically link to the {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} default {{#crossLink \"Viewer/material:property\"}}{{/crossLink}}.",
            "static": 1
        },
        "animate": {
            "name": "animate",
            "submodules": {},
            "classes": {
                "Fly": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "**Fly** flys a {{#crossLink \"Camera\"}}{{/crossLink}}\n## Overview\n## Example\nTODO\n````javascript\n TODO\n ````",
            "file": "src/core/animate/cameraFlyAnimation.js",
            "line": 1
        },
        "camera": {
            "name": "camera",
            "submodules": {},
            "classes": {
                "Camera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "A **Camera** defines a viewpoint within a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>You can have an unlimited number of Cameras in a {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>At any instant, the Camera we're looking through is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>Cameras can be controlled with controls such as {{#crossLink \"CameraControl\"}}{{/crossLink}}, {{#crossLink \"KeyboardAxisCamera\"}}{{/crossLink}},\n{{#crossLink \"KeyboardOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardPanCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardZoomCamera\"}}{{/crossLink}},\n{{#crossLink \"MouseOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"MousePanCamera\"}}{{/crossLink}} and {{#crossLink \"MouseZoomCamera\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\nLet's create a {{#crossLink \"Viewer\"}}{{/crossLink}} with a Camera that's controlled by a {{#crossLink \"CameraControl\"}}{{/crossLink}}:\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n//...\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [0, 0, -10]\n   });\n\n// Create a CameraControl that controls our Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n````\n\nNow let's create a second Camera and switch the {{#crossLink \"CameraControl\"}}{{/crossLink}} over to it:\n\n````Javascript\n\n// Deactivate our Camera\ncamera.active = false;\n\n// Create a second Camera\n// Camera is active by default\nvar camera2 = new BIMSURFER.Camera(viewer, {\n       eye: [-10, 0, 0]\n   });\n\n// Switch our CameraControl to the second Camera\n// Now we're controlling that Camera\ncameraControl.camera = camera2;\n````",
            "file": "src/core/camera/camera.js",
            "line": 1
        },
        "control": {
            "name": "control",
            "submodules": {},
            "classes": {
                "CameraControl": 1,
                "ClickSelectObjects": 1,
                "KeyboardAxisCamera": 1,
                "KeyboardOrbitCamera": 1,
                "KeyboardPanCamera": 1,
                "KeyboardZoomCamera": 1,
                "MouseOrbitCamera": 1,
                "MousePanCamera": 1,
                "MouseZoomCamera": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "A **CameraControl** allows you to pan, rotate and zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse and keyboard,\nas well as switch it between preset left, right, anterior, posterior, superior and inferior views.\n\n## Overview\n\n<ul>\n<li>You can have multiple CameraControls within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple CameraControls can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the CameraControl we're driving is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a CameraControl to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\nIn this example we have a {{#crossLink \"Viewer\"}}{{/crossLink}} with a\n{{#crossLink \"Camera\"}}{{/crossLink}} that's controlled by a CameraControl.\n\n````Javascript\n\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [0, 0, -10]\n   });\n\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\nvar teapot = new BIMSURFER.BoxObject(viewer);\n\n````",
            "file": "src/core/control/mouseZoomCamera.js",
            "line": 1
        },
        "effect": {
            "name": "effect",
            "submodules": {},
            "classes": {
                "Effect": 1,
                "HighlightEffect": 1,
                "IsolateEffect": 1,
                "XRayEffect": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "An **Effect** is a the base class for visual effects that are applied to {{#crossLink \"ObjectSet\"}}ObjectSets{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Effect is subclassed by {{#crossLink \"HighlightEffect\"}}{{/crossLink}}, {{#crossLink \"IsolateEffect\"}}{{/crossLink}} and {{#crossLink \"XRayEffect\"}}{{/crossLink}}.</li>\n<li>Multiple Effects can share the same {{#crossLink \"ObjectSet\"}}{{/crossLink}} if required.</li>\n<li>An Effect will provide its own default {{#crossLink \"ObjectSet\"}}{{/crossLink}} when you don't configure it with one.</li>\n</ul>\n\n## Example\n\nTODO",
            "file": "src/core/effect/xrayEffect.js",
            "line": 1
        },
        "geometry": {
            "name": "geometry",
            "submodules": {},
            "classes": {
                "BoxGeometry": 1,
                "Geometry": 1,
                "TeapotGeometry": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "An **BoxGeometry** is a box-shaped {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "file": "src/core/geometry/teapotGeometry.js",
            "line": 1
        },
        "input": {
            "name": "input",
            "submodules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "BIMSURFER",
            "namespace": "",
            "description": "Publishes key and mouse events that occur on the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Viewer\"}}{{/crossLink}} provides an Input on itself as a read-only property.</li>\n</ul>\n\n## Example\n\nIn this example, we're subscribing to some mouse and key events that will occur on\na {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n````javascript\nvar viewer = new BIMSURFER.Viewer(...);\n\nvar input = viewer.input;\n\n// We'll save a handle to this subscription\n// to show how to unsubscribe, further down\nvar handle = input.on(\"mousedown\", function(coords) {\n      console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n      console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n     console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n      console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is down\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is down\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is down\");\n              break;\n\n           default:\n              console.log(\"Some other key is down\");\n      }\n    });\n\ninput.on(\"keyup\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is up\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is up\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is up\");\n              break;\n\n           default:\n              console.log(\"Some other key is up\");\n       }\n    });\n\n// TODO: ALT and CTRL keys etc\n````\n\n### Unsubscribing from Events\n\nIn the snippet above, we saved a handle to one of our event subscriptions.\n\nWe can then use that handle to unsubscribe again, like this:\n\n````javascript\ninput.off(handle);\n````",
            "file": "src/core/input/input.js",
            "line": 1
        }
    },
    "classes": {
        "Fly": {
            "name": "Fly",
            "shortname": "Fly",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "file": "src/core/animate/cameraFlyAnimation.js",
            "line": 1,
            "description": "**Fly** flys a {{#crossLink \"Camera\"}}{{/crossLink}}\n## Overview\n## Example\nTODO\n````javascript\n TODO\n ````",
            "submodule": "animate",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Fly configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Fly.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "Camera to control",
                            "type": "Camera",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Camera": {
            "name": "Camera",
            "shortname": "Camera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/camera/camera.js",
            "line": 1,
            "description": "A **Camera** defines a viewpoint within a {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>You can have an unlimited number of Cameras in a {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>At any instant, the Camera we're looking through is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>Cameras can be controlled with controls such as {{#crossLink \"CameraControl\"}}{{/crossLink}}, {{#crossLink \"KeyboardAxisCamera\"}}{{/crossLink}},\n{{#crossLink \"KeyboardOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardPanCamera\"}}{{/crossLink}}, {{#crossLink \"KeyboardZoomCamera\"}}{{/crossLink}},\n{{#crossLink \"MouseOrbitCamera\"}}{{/crossLink}}, {{#crossLink \"MousePanCamera\"}}{{/crossLink}} and {{#crossLink \"MouseZoomCamera\"}}{{/crossLink}}.</li>\n</ul>\n\n## Example\n\nLet's create a {{#crossLink \"Viewer\"}}{{/crossLink}} with a Camera that's controlled by a {{#crossLink \"CameraControl\"}}{{/crossLink}}:\n\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n//...\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [0, 0, -10]\n   });\n\n// Create a CameraControl that controls our Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n````\n\nNow let's create a second Camera and switch the {{#crossLink \"CameraControl\"}}{{/crossLink}} over to it:\n\n````Javascript\n\n// Deactivate our Camera\ncamera.active = false;\n\n// Create a second Camera\n// Camera is active by default\nvar camera2 = new BIMSURFER.Camera(viewer, {\n       eye: [-10, 0, 0]\n   });\n\n// Switch our CameraControl to the second Camera\n// Now we're controlling that Camera\ncameraControl.camera = camera2;\n````",
            "submodule": "camera",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "eye",
                            "description": "Eye position.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,-10]"
                        },
                        {
                            "name": "look",
                            "description": "The position of the point-of-interest we're looking at.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,0,0]"
                        },
                        {
                            "name": "up",
                            "description": "The \"up\" vector.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[0,1,0]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Canvas": {
            "name": "Canvas",
            "shortname": "Canvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/canvas/canvas.js",
            "line": 1,
            "description": "A **Canvas** manages a {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s HTML canvas and its WebGL context.\n\n## Overview\n\n<ul>\n\n<li>Each {{#crossLink \"Scene\"}}Scene{{/crossLink}} provides a Canvas as a read-only property on itself.</li>\n\n<li>When a {{#crossLink \"Scene\"}}Scene{{/crossLink}} is configured with the ID of\nan existing <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>, then\nthe Canvas will bind to that, otherwise the Canvas will automatically create its own.</li>\n\n<li>A Canvas will fire a {{#crossLink \"Canvas/resized:event\"}}{{/crossLink}} event whenever\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a> resizes.</li>\n\n<li>A Canvas is responsible for obtaining a WebGL context from\nthe <a href=\"http://www.w3.org/TR/html5/scripting-1.html#the-canvas-element\">HTMLCanvasElement</a>.</li>\n\n<li>A Canvas also fires a {{#crossLink \"Canvas/webglContextLost:event\"}}{{/crossLink}} event when the WebGL context is\nlost, and a {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} when it is restored again.</li>\n\n<li>The various components within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}} will transparently recover on\nthe {{#crossLink \"Canvas/webglContextRestored:event\"}}{{/crossLink}} event.</li>\n\n</ul>\n\n<img src=\"http://www.gliffy.com/go/publish/image/7103211/L.png\"></img>\n\n## Example\n\nIn the example below, we're creating a {{#crossLink \"Scene\"}}Scene{{/crossLink}} without specifying an HTML canvas element\nfor it. This causes the {{#crossLink \"Scene\"}}Scene{{/crossLink}}'s Canvas component to create its own default element\nwithin the page. Then we subscribe to various events fired by that Canvas component.\n\n```` javascript\nvar scene = new BIMSURFER.Scene();\n\n// Get the Canvas off the Scene\n// Since we did not configure the Scene with the ID of a DOM canvas element,\n// the Canvas will create its own canvas element in the DOM\nvar canvas = scene.canvas;\n\n// Get the WebGL context off the Canvas\nvar gl = canvas.gl;\n\n// Subscribe to Canvas resize events\ncanvas.on(\"resize\", function(e) {\n       var width = e.width;\n       var height = e.height;\n       var aspect = e.aspect;\n       //...\n    });\n\n// Subscribe to WebGL context loss events on the Canvas\ncanvas.on(\"webglContextLost\", function() {\n       //...\n    });\n\n// Subscribe to WebGL context restored events on the Canvas\ncanvas.on(\"webglContextRestored\", function(gl) {\n       var newContext = gl;\n       //...\n    });\n````\n\nWhen we want to bind the Canvas to an existing HTML canvas element, configure the\n{{#crossLink \"Scene\"}}{{/crossLink}} with the ID of the element, like this:\n\n```` javascript\n// Create a Scene, this time configuting it with the\n// ID of an existing DOM canvas element\nvar scene = new BIMSURFER.Scene({\n         canvasId: \"myCanvas\"\n    });\n\n// ..and the rest of this example can be the same as the previous example.\n\n````",
            "static": 1,
            "params": [
                {
                    "name": "scene",
                    "description": "Parent scene",
                    "type": "Scene"
                }
            ],
            "extends": "Component"
        },
        "CameraControl": {
            "name": "CameraControl",
            "shortname": "CameraControl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/cameraControl.js",
            "line": 1,
            "description": "A **CameraControl** allows you to pan, rotate and zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse and keyboard,\nas well as switch it between preset left, right, anterior, posterior, superior and inferior views.\n\n## Overview\n\n<ul>\n<li>You can have multiple CameraControls within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple CameraControls can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the CameraControl we're driving is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a CameraControl to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\nIn this example we have a {{#crossLink \"Viewer\"}}{{/crossLink}} with a\n{{#crossLink \"Camera\"}}{{/crossLink}} that's controlled by a CameraControl.\n\n````Javascript\n\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [0, 0, -10]\n   });\n\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\nvar teapot = new BIMSURFER.BoxObject(viewer);\n\n````",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The Camera to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "ClickSelectObjects": {
            "name": "ClickSelectObjects",
            "shortname": "ClickSelectObjects",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/clickSelectObjects.js",
            "line": 1,
            "description": "A **ClickSelectObjects** lets you add or remove {{#crossLink \"Object\"}}Objects{{/crossLink}} to and from an {{#crossLink \"ObjectSet\"}}ObjectSet{{/crossLink}} by clicking them with the mouse.\n\n## Overview\n\n<ul>\n<li>A ClickSelectObjects adds {{#crossLink \"Object\"}}Objects{{/crossLink}} to the {{#crossLink \"ObjectSet\"}}{{/crossLink}} as you\nclick them with the mouse, removing them again when you click them a second time.</li>\n<li>Typically a ClickSelectObjects will share an {{#crossLink \"ObjectSet\"}}{{/crossLink}} with one or\nmore {{#crossLink \"Effect\"}}Effects{{/crossLink}}, in order to select which {{#crossLink \"Object\"}}Objects{{/crossLink}} are influenced by the {{#crossLink \"Effect\"}}Effects{{/crossLink}}.</li>\n<li>A ClickSelectObjects will provide its own {{#crossLink \"ObjectSet\"}}{{/crossLink}} by default.</li>\n<li>Hold down SHIFT while clicking to multi-select.</li>\n</ul>\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Camera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "selection",
                    "description": "The Selection to update.",
                    "type": "Selection",
                    "optional": true
                }
            ],
            "see": [
                "{Object}",
                "{ObjectSet}"
            ],
            "extends": "Component"
        },
        "KeyboardAxisCamera": {
            "name": "KeyboardAxisCamera",
            "shortname": "KeyboardAxisCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/keyboardAxisCamera.js",
            "line": 1,
            "description": "A **KeyboardAxisCamera** lets you switch a {{#crossLink \"Camera\"}}{{/crossLink}} between preset left, right, anterior, posterior, superior and inferior views using the keyboard.\n\n## Overview\n\n<ul>\n<li>If desired, you can have multiple KeyboardAxisCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardAxisCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the KeyboardAxisCamera we're driving is the one whose {{#crossLink \"Camera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardAxisCamera to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardOrbitCamera": {
            "name": "KeyboardOrbitCamera",
            "shortname": "KeyboardOrbitCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/keyboardOrbitCamera.js",
            "line": 1,
            "description": "A **KeyboardOrbitCamera** lets you orbit a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the keyboard's arrow keys.\n\n## Overview\n\n<ul>\n<li>Orbiting involves rotating the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}\nposition about its current {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>The orbit is freely rotating, without gimbal-lock.</li>\n<li>If desired, you can have multiple KeyboardOrbitCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardOrbitCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the KeyboardOrbitCameras we're driving is the one whose {{#crossLink \"KeyboardOrbitCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardOrbitCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardAxisCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardPanCamera": {
            "name": "KeyboardPanCamera",
            "shortname": "KeyboardPanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/keyboardPanCamera.js",
            "line": 1,
            "description": "A **KeyboardPanCamera** lets you pan a {{#crossLink \"Camera\"}}{{/crossLink}} using the W, S, A and D keys.\n\n## Overview\n\n<ul>\n<li>Panning up and down involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning backwards and forwards involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} - {{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the the vector that is perpendicular to its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} and {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}-{{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>If desired, you can have multiple KeyboardPanCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardPanCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the KeyboardPanCameras we're driving is the one whose {{#crossLink \"KeyboardPanCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardPanCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardOrbitCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "KeyboardZoomCamera": {
            "name": "KeyboardZoomCamera",
            "shortname": "KeyboardZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/keyboardZoomCamera.js",
            "line": 1,
            "description": "A **KeyboardZoomCamera** lets you zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the + and - keys.\n\n## Overview\n\n<ul>\n<li>Zooming involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} closer and farther to its {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>If desired, you can have multiple KeyboardZoomCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple KeyboardZoomCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the KeyboardZoomCameras we're driving is the one whose {{#crossLink \"KeyboardZoomCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a KeyboardZoomCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this KeyboardZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MouseOrbitCamera": {
            "name": "MouseOrbitCamera",
            "shortname": "MouseOrbitCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/mouseOrbitCamera.js",
            "line": 1,
            "description": "A **MouseOrbitCamera** lets you orbit a {{#crossLink \"Camera\"}}{{/crossLink}} about its point-of-interest using the mouse.\n\n## Overview\n\n<ul>\n<li>Orbiting involves rotating the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}\nposition about its current {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>The orbit is freely rotating, without gimbal-lock.</li>\n<li>If desired, you can have multiple MouseOrbitCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MouseOrbitCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}Cameras{{/crossLink}}.</li>\n<li>At any instant, the MouseOrbitCameras we're driving is the one whose {{#crossLink \"MouseOrbitCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MouseOrbitCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseOrbitCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MousePanCamera": {
            "name": "MousePanCamera",
            "shortname": "MousePanCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/mousePanCamera.js",
            "line": 1,
            "description": "A **MousePanCamera** lets you pan a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse.\n\n## Overview\n\n<ul>\n<li>Panning is done by dragging the mouse with the left and right buttons down.</li>\n<li>Panning up and down involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the direction of its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} vector.</li>\n<li>Panning left and right involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} and {{#crossLink \"Camera/look:property\"}}{{/crossLink}} positions along the the vector that is perpendicular to its {{#crossLink \"Camera/up:property\"}}{{/crossLink}} and {{#crossLink \"Camera/eye:property\"}}{{/crossLink}}-{{#crossLink \"Camera/look:property\"}}{{/crossLink}} vector.</li>\n<li>If desired, you can have multiple MousePanCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MousePanCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the MousePanCameras we're driving is the one whose {{#crossLink \"MousePanCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MousePanCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MousePanCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "MouseZoomCamera": {
            "name": "MouseZoomCamera",
            "shortname": "MouseZoomCamera",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/control/mouseZoomCamera.js",
            "line": 1,
            "description": "A **MouseZoomCamera** lets you zoom a {{#crossLink \"Camera\"}}{{/crossLink}} using the mouse wheel.\n\n## Overview\n\n<ul>\n<li>Zooming involves moving the {{#crossLink \"Camera\"}}Camera's{{/crossLink}} {{#crossLink \"Camera/eye:property\"}}{{/crossLink}} closer and farther to its {{#crossLink \"Camera/look:property\"}}{{/crossLink}} position.</li>\n<li>If desired, you can have multiple MouseZoomCameras within the same {{#crossLink \"Viewer\"}}{{/crossLink}}.</li>\n<li>Multiple MouseZoomCameras can drive the same {{#crossLink \"Camera\"}}{{/crossLink}}, or can each drive their own separate {{#crossLink \"Camera\"}}{{/crossLink}}.</li>\n<li>At any instant, the MouseZoomCameras we're driving is the one whose {{#crossLink \"MouseZoomCamera/active:property\"}}active{{/crossLink}} property is true.</li>\n<li>You can switch a MouseZoomCameras to a different {{#crossLink \"Camera\"}}{{/crossLink}} at any time.</li>\n</ul>\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "control",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this MouseZoomCamera.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "camera",
                    "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} to control.",
                    "type": "Camera",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "Effect": {
            "name": "Effect",
            "shortname": "Effect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/effect/effect.js",
            "line": 1,
            "description": "An **Effect** is a the base class for visual effects that are applied to {{#crossLink \"ObjectSet\"}}ObjectSets{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Effect is subclassed by {{#crossLink \"HighlightEffect\"}}{{/crossLink}}, {{#crossLink \"IsolateEffect\"}}{{/crossLink}} and {{#crossLink \"XRayEffect\"}}{{/crossLink}}.</li>\n<li>Multiple Effects can share the same {{#crossLink \"ObjectSet\"}}{{/crossLink}} if required.</li>\n<li>An Effect will provide its own default {{#crossLink \"ObjectSet\"}}{{/crossLink}} when you don't configure it with one.</li>\n</ul>\n\n## Example\n\nTODO",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Effect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "objectSet",
                    "description": "The {{#crossLink \"Objectset\"}}{{/crossLink}} to update.",
                    "type": "ObjectSet",
                    "optional": true
                }
            ],
            "extends": "Component"
        },
        "HighlightEffect": {
            "name": "HighlightEffect",
            "shortname": "HighlightEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/effect/highlightEffect.js",
            "line": 1,
            "description": "A **HighlightEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that highlights the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nHighlight objects that match given IDs, using an {{#crossLink \"ObjectSet\"}}{{/crossLink}} and a HighlightEffect:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n       eye: [0, 0, -10]\n   });\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n       camera: camera\n   });\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"foo\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"bar\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.Object(viewer, {\n   objectId: \"baz\",\n   ifcType: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply a highlight effect to the ObjectSet\nvar highlightEffect = new BIMSURFER.HighlightEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add Objects to the ObjectSet by ID\n// These Objects become highlighted\nobjectSet.addObjectIds([\"foo\", \"bar\", \"baz\"]);\n\n// Remove an Object from the ObjectSet by ID\n// That Object becomes non-highlighted again\nobjectSet.removeObjectIds([\"baz\"]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this HighlightEffect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "selection",
                    "description": "The {{#crossLink \"Selection\"}}{{/crossLink}} to update.",
                    "type": "Selection",
                    "optional": true
                }
            ],
            "extends": "Effect"
        },
        "IsolateEffect": {
            "name": "IsolateEffect",
            "shortname": "IsolateEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/effect/isolateEffect.js",
            "line": 1,
            "description": "A **IsolateEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that exclusively shows the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nIsolate objects that match given IDs, using an {{#crossLink \"ObjectSet\"}}{{/crossLink}} and an IsolateEffect:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"foo\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"bar\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.Object(viewer, {\n   objectId: \"baz\",\n   ifcType: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply an Isolate effect to the ObjectSet\nvar isolateEffect = new BIMSURFER.IsolateEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Add Objects to the ObjectSet by ID\n// These Objects become visible\nobjectSet.addObjectIds([\"foo\", \"bar\", \"baz\"]);\n\n// Remove an Object from the ObjectSet by ID\n// That Object becomes invisible again\nobjectSet.removeObjectIds([\"baz\"]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this IsolateEffect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "selection",
                    "description": "The {{#crossLink \"Selection\"}}{{/crossLink}} to update.",
                    "type": "Selection",
                    "optional": true
                }
            ],
            "extends": "Effect"
        },
        "XRayEffect": {
            "name": "XRayEffect",
            "shortname": "XRayEffect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/effect/xrayEffect.js",
            "line": 1,
            "description": "An **XRayEffect** is an {{#crossLink \"Effect\"}}{{/crossLink}} that creates an X-ray view of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within an {{#crossLink \"ObjectSet\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nX-ray objects that match given IFC types, using an {{#crossLink \"ObjectSet\"}}{{/crossLink}} and an XRayEffect:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"foo\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"bar\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.Object(viewer, {\n   objectId: \"baz\",\n   ifcType: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply an X-Ray effect to the ObjectSet\nvar xrayEffect = new BIMSURFER.XRayEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Add Objects to the ObjectSet by IFC type\n// These Objects become opaque\nobjectSet.addObjectTypes([\"IfcWall\", \"IfcBeam\"]);\n\n// Remove an Object from the ObjectSet by IFC type\n// That Object becomes transparent\nobjectSet.removeObjectTypes([\"IfcWall\"]);\n\n````",
            "submodule": "effect",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this XRayEffect.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "selection",
                    "description": "The {{#crossLink \"Selection\"}}{{/crossLink}} to update.",
                    "type": "Selection",
                    "optional": true
                }
            ],
            "extends": "Effect"
        },
        "BoxGeometry": {
            "name": "BoxGeometry",
            "shortname": "BoxGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/geometry/boxGeometry.js",
            "line": 1,
            "description": "An **BoxGeometry** is a box-shaped {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Geometry": {
            "name": "Geometry",
            "shortname": "Geometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/geometry/geometry.js",
            "line": 1,
            "description": "TODO\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "primitive",
                            "description": "The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"triangles\""
                        },
                        {
                            "name": "positions",
                            "description": "Positions array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "normals",
                            "description": "Normals array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv",
                            "description": "UVs array.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "uv2",
                            "description": "Second UVs array, for a second UV level.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "colors",
                            "description": "Vertex colors.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "indices",
                            "description": "Indices array.",
                            "type": "Array of Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "TeapotGeometry": {
            "name": "TeapotGeometry",
            "shortname": "TeapotGeometry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/geometry/teapotGeometry.js",
            "line": 1,
            "description": "An **TeapotGeometry** is a teapot-shaped {{#crossLink \"Geometry\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "submodule": "geometry",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxGeometry.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Geometry"
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/input/input.js",
            "line": 1,
            "description": "Publishes key and mouse events that occur on the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>Each {{#crossLink \"Viewer\"}}{{/crossLink}} provides an Input on itself as a read-only property.</li>\n</ul>\n\n## Example\n\nIn this example, we're subscribing to some mouse and key events that will occur on\na {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.\n\n````javascript\nvar viewer = new BIMSURFER.Viewer(...);\n\nvar input = viewer.input;\n\n// We'll save a handle to this subscription\n// to show how to unsubscribe, further down\nvar handle = input.on(\"mousedown\", function(coords) {\n      console.log(\"Mouse down at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseup\", function(coords) {\n      console.log(\"Mouse up at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"mouseclicked\", function(coords) {\n     console.log(\"Mouse clicked at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"dblclick\", function(coords) {\n      console.log(\"Double-click at: x=\" + coords[0] + \", y=\" + coords[1]);\n});\n\ninput.on(\"keydown\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is down\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is down\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is down\");\n              break;\n\n           default:\n              console.log(\"Some other key is down\");\n      }\n    });\n\ninput.on(\"keyup\", function(keyCode) {\n       switch (keyCode) {\n\n           case this.KEY_A:\n              console.log(\"The 'A' key is up\");\n              break;\n\n           case this.KEY_B:\n              console.log(\"The 'B' key is up\");\n              break;\n\n           case this.KEY_C:\n              console.log(\"The 'C' key is up\");\n              break;\n\n           default:\n              console.log(\"Some other key is up\");\n       }\n    });\n\n// TODO: ALT and CTRL keys etc\n````\n\n### Unsubscribing from Events\n\nIn the snippet above, we saved a handle to one of our event subscriptions.\n\nWe can then use that handle to unsubscribe again, like this:\n\n````javascript\ninput.off(handle);\n````",
            "submodule": "input",
            "extends": "Component"
        },
        "AmbientLight": {
            "name": "AmbientLight",
            "shortname": "AmbientLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/light/ambientLight.js",
            "line": 1,
            "description": "An **AmbientLight** defines an ambient light source of fixed intensity and color that affects all attached {{#crossLink \"Object\"}}Objects{{/crossLink}}\n equally.\n## Overview\n\nTODO\n## Example\nTODO\n```` javascript\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this AmbientLight within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "AmbientLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this AmbientLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ambient",
                            "description": "The color of this AmbientLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8]"
                        }
                    ]
                }
            ],
            "extends": "Light"
        },
        "DirLight": {
            "name": "DirLight",
            "shortname": "DirLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/light/dirLight.js",
            "line": 1,
            "description": "A **DirLight** defines a directional light source that originates from a single point and spreads outward in all directions.\n\n## Overview\n\n<ul>\n\n<li>DirLights have a position, but no direction.</li>\n\n<li>DirLights may be defined in either **World** or **View** coordinate space. When in World-space, their position\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their position is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n\n<li>Within bIMSurfer's's Phong lighting calculations, DirLight {{#crossLink \"DirLight/diffuse:property\"}}{{/crossLink}} and\n{{#crossLink \"DirLight/specular:property\"}}{{/crossLink}}.</li>\n\n<li>DirLights have {{#crossLink \"DirLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"DirLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"DirLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n\n</ul>\n\n\n## Example\n\nTODO",
            "is_constructor": 1,
            "extends": "Light",
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The DirLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this DirLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "dir",
                            "description": "Direction, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Diffuse color of this DirLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this DirLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "Light": {
            "name": "Light",
            "shortname": "Light",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/light/light.js",
            "line": 1,
            "description": "**Light** is the base class for all light source classes in BIMViewer.\n## Overview\n## Example\nTODO\n````javascript\n TODO\n ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Light configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Light.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "camera",
                            "description": "Camera to control",
                            "type": "Camera",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "PointLight": {
            "name": "PointLight",
            "shortname": "PointLight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/light/pointLight.js",
            "line": 1,
            "description": "A **PointLight** defines a positional light source that originates from a single point and spreads outward in all directions.\n\n## Overview\n\n<ul>\n\n<li>PointLights have a position, but no direction.</li>\n\n<li>PointLights may be defined in either **World** or **View** coordinate space. When in World-space, their position\nis relative to the World coordinate system, and will appear to move as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.\nWhen in View-space, their position is relative to the View coordinate system, and will behave as if fixed to the viewer's\nhead as the {{#crossLink \"Camera\"}}{{/crossLink}} moves.</li>\n\n<li>PointLights have {{#crossLink \"PointLight/constantAttenuation:property\"}}{{/crossLink}}, {{#crossLink \"PointLight/linearAttenuation:property\"}}{{/crossLink}} and\n{{#crossLink \"PointLight/quadraticAttenuation:property\"}}{{/crossLink}} factors, which indicate how their intensity attenuates over distance.</li>\n\n</ul>\n\n\n## Example\n\nTODO",
            "is_constructor": 1,
            "extends": "Light",
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "The PointLight configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this PointLight.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "pos",
                            "description": "Position, in either World or View space, depending on the value of the **space** parameter.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[ 1.0, 1.0, 1.0 ]"
                        },
                        {
                            "name": "color",
                            "description": "Diffuse color of this PointLight.",
                            "type": "Array(Number)",
                            "optional": true,
                            "optdefault": "[0.7, 0.7, 0.8 ]"
                        },
                        {
                            "name": "constantAttenuation",
                            "description": "Constant attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "linearAttenuation",
                            "description": "Linear attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "quadraticAttenuation",
                            "description": "Quadratic attenuation factor.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "space",
                            "description": "The coordinate system this PointLight is defined in - \"view\" or \"space\".",
                            "type": "String",
                            "optional": true,
                            "optdefault": "\"view\""
                        }
                    ]
                }
            ]
        },
        "math": {
            "name": "math",
            "shortname": "math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/math/math.js",
            "line": 1,
            "description": "Math functions, used within BIMSURFER, but also available for you to use in your application code."
        },
        "BoxObject": {
            "name": "BoxObject",
            "shortname": "BoxObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/object/boxObject.js",
            "line": 1,
            "description": "An **BoxObject** is a box-shaped {{#crossLink \"Object\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxObject.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Object"
        },
        "Object": {
            "name": "Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/object/object.js",
            "line": 1,
            "description": "An **Object** is a visible 3D element within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nIn the example below we'll create three Objects, each with a unique ID:\n````Javascript\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"foo\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"bar\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.Object(viewer, {\n   objectId: \"baz\",\n   ifcType: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n````\n\nWe can find the objects in the {{#crossLink \"Viewer\"}}{{/crossLink}} by ID:\n````javascript\nvar foo = viewer.components[\"foo\"];\n````\nor by IFC type:\n````javascript\n\n// Get all Objects of the given IFC type\nvar wallObjects = viewer.components[\"IfcWall\"];\n\n// Get our \"foo\" object from those\nvar foo = wallObjects[\"foo\"];\n````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Object.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "ifcType",
                            "description": "The IFC type of this Object.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "color",
                            "description": "The color of this Object, defaults to the color of the specified IFC type.",
                            "type": "Array of Number",
                            "optional": true
                        },
                        {
                            "name": "geometries",
                            "description": "The {{#crossLink \"Geometry\"}}{{/crossLink}} to render for this Object.",
                            "type": "Array of Geometry",
                            "optional": true
                        },
                        {
                            "name": "clipping",
                            "description": "Whether this Object is clipped by {{#crossLink \"Clips\"}}{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "transparent",
                            "description": "Whether this Object is transparent or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "opacity",
                            "description": "Scalar in range 0-1 that controls opacity, where 0 is completely transparent and 1 is completely opaque.\nOnly applies while this Object's {{#crossLink \"Object/transparent:property\"}}transparent{{/crossLink}} equals ````true````.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "highlight",
                            "description": "Whether this Object is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "xray",
                            "description": "Whether this Object is highlighted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "matrix",
                            "description": "Transform matrix - a one-dimensional, sixteen element array of elements, an identity matrix by default.",
                            "type": "Array of Number",
                            "optional": true,
                            "optdefault": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]"
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "ObjectSet": {
            "name": "ObjectSet",
            "shortname": "ObjectSet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/object/objectSet.js",
            "line": 1,
            "description": "An **ObjectSet** is a set of {{#crossLink \"Object\"}}Objects{{/crossLink}}.\n\n## Overview\n\n<ul>\n<li>{{#crossLink \"Object\"}}Objects{{/crossLink}} can be added and removed to and from an ObjectSet using IDs or IFC types.</li>\n<li>An {{#crossLink \"ObjectSet\"}}{{/crossLink}} can be queried at any time for the {{#crossLink \"ObjectSet/boundary:property\"}}{{/crossLink}}\nand {{#crossLink \"ObjectSet/center:property\"}}{{/crossLink}} of its {{#crossLink \"Object\"}}Objects{{/crossLink}}.</li>\n<li>Effects like {{#crossLink \"HighlightEffect\"}}{{/crossLink}}, {{#crossLink \"XRayEffect\"}}{{/crossLink}} and\n{{#crossLink \"IsolateEffect\"}}{{/crossLink}} apply their effects to ObjectSets.</li>\n<li>A {{#crossLink \"ClickSelectObjects\"}}{{/crossLink}} can be used to add and remove {{#crossLink \"Object\"}}Objects{{/crossLink}} to or from an ObjectSet as you click them.</li>\n\n</ul>\n\n\nTODO\n\n## Examples\n\nHighlighting clicked objects, using an ObjectSet, {{#crossLink \"HighlightEffect\"}}{{/crossLink}} and {{#crossLink \"ClickSelectObjects\"}}{{/crossLink}}:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n//...\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply a Highlight effect to the ObjectSet\nvar highlightEffect = new BIMSURFER.HighlightEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Create a ClickSelectObjects control, which will add and remove objects to and from the ObjectSet\n// to and from the ObjectSet as we click them\nvar clickSelect = new BIMSURFER.ClickSelectObjects(viewer, {\n       objectSet: objectSet\n   });\n````\n\nIsolate objects that match given IDs, using an ObjectSet and an {{#crossLink \"IsolateEffect\"}}{{/crossLink}}:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n//...\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply an Isolate effect to the ObjectSet\nvar isolateEffect = new BIMSURFER.IsolateEffect(viewer, {\n       objectSet: objectSet\n   });\n\n// Add Objects to the ObjectSet by ID\n// These Objects become visible\nobjectSet.addObjectIds([\"foo\", \"bar\", \"baz\"]);\n\n// Remove an Object from the ObjectSet by ID\n// That Object becomes invisible again\nobjectSet.removeObjectIds([\"baz\"]);\n\n````\n\nX-ray and highlight objects that match given IFC types, using an ObjectSet, {{#crossLink \"XRayEffect\"}}{{/crossLink}} and {{#crossLink \"HighlightEffect\"}}{{/crossLink}}:\n\n````javascript\n\n// Create a Viewer\nvar viewer = new BIMSURFER.Viewer(null, \"myDiv\", {}, false);\n\n// Create a Camera\nvar camera = new BIMSURFER.Camera(viewer, {\n   eye: [0, 0, -10]\n});\n\n// Create a CameraControl to interact with the Camera\nvar cameraControl = new BIMSURFER.CameraControl(viewer, {\n   camera: camera\n});\n\n// Create some BoxObjects\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"foo\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, -4])\n});\n\nnew BIMSURFER.BoxObject(viewer, {\n   objectId: \"bar\",\n   ifcType: \"IfcWall\",\n   matrix: BIMSURFER.math.translationMat4v([4, 0, -4])\n});\n\nnew BIMSURFER.Object(viewer, {\n   objectId: \"baz\",\n   ifcType: \"IfcBeam\",\n   matrix: BIMSURFER.math.translationMat4v([-4, 0, 4])\n});\n\n// Create an ObjectSet\nvar objectSet = new BIMSURFER.ObjectSet(viewer);\n\n// Apply an X-Ray effect to the ObjectSet\nvar xrayEffect = new BIMSURFER.XRayEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Apply a Highlight effect to the ObjectSet\nvar highlightEffect = new BIMSURFER.HighlightEffect(viewer, {\n   objectSet: objectSet\n});\n\n// Add Objects to the ObjectSet by IFC type\n// These Objects become opaque and highlighted\nobjectSet.addObjectTypes([\"IfcWall\", \"IfcBeam\"]);\n\n// Remove an Object from the ObjectSet by IFC type\n// That Object becomes transparent and non-highlighted\nobjectSet.removeObjectTypes([\"IfcWall\"]);\n\n````\n\n#### Boundaries\n\nTODO",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Selection.",
                            "type": "String:Object",
                            "optional": true
                        },
                        {
                            "name": "objects",
                            "description": "} Array of {{#crossLink \"Object\"}}{{/crossLink}} IDs or instances.",
                            "type": "Array of String|Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "TeapotObject": {
            "name": "TeapotObject",
            "shortname": "TeapotObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/object/teapotObject.js",
            "line": 1,
            "description": "An **TeapotObject** is a teapot-shaped {{#crossLink \"Object\"}}{{/crossLink}}.\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this BoxObject.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Object"
        },
        "BIMSURFER": {
            "name": "BIMSURFER",
            "shortname": "BIMSURFER",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/BIMSURFER.js",
            "line": 1,
            "description": "The BIMSURFER namespace.",
            "mainName": "SIMSURFER",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "static": 1,
            "author": "xeolabs / http://xeolabs.com/"
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/component.js",
            "line": 1,
            "description": "**Component** is the base class for all components within a {{#crossLink \"Viewer\"}}{{/crossLink}}.\n<hr>\n*Contents*\n<Ul>\n <li><a href=\"#ids\">Component IDs</a></li>\n <li><a href=\"#componentProps\">Properties</a></li>\n <li><a href=\"#metadata\">Metadata</a></li>\n <li><a href=\"#logging\">Logging</a></li>\n <li><a href=\"#destruction\">Destruction</a></li>\n </ul>\n<hr>\n## <a name=\"ids\">Component IDs</a>\nEvery Component has an ID that's unique within the parent {{#crossLink \"Viewer\"}}{{/crossLink}}. the {{#crossLink \"Viewer\"}}{{/crossLink}} generates\n the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n viewer comprised of {{#crossLink \"Viewer\"}}{{/crossLink}}, {{#crossLink \"Material\"}}{{/crossLink}}, {{#crossLink \"Geometry\"}}{{/crossLink}} and\n {{#crossLink \"GameObject\"}}{{/crossLink}} components, while letting xeoEngine generate its own ID for\n the {{#crossLink \"Geometry\"}}{{/crossLink}}:\n````javascript\n````\n## <a name=\"componentProps\">Properties</a>\nAlmost every property on a xeoEngine Component fires a change event when you update it. For example, we can subscribe\n to the {{#crossLink \"Material/diffuse:event\"}}{{/crossLink}} event that a\n {{#crossLink \"Material\"}}{{/crossLink}} fires when its {{#crossLink \"Material/diffuse:property\"}}{{/crossLink}}\n property is updated, like so:\n````javascript\n // Bind a change callback to a property\n var handle = material.on(\"diffuse\", function(diffuse) {\n    console.log(\"Material diffuse color has changed to: [\" + diffuse[0] + \", \" + diffuse[1] + \",\" + diffuse[2] + \"]\");\n});\n// Change the property value, which fires the callback\n material.diffuse = [ 0.0, 0.5, 0.5 ];\n// Unsubscribe from the property change event\n material.off(handle);\n ````\nWe can also subscribe to changes in the way components are attached to each other, since components are properties\n of other components. For example, we can subscribe to the '{{#crossLink \"GameObject/material:event\"}}{{/crossLink}}' event that a\n {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} fires when its {{#crossLink \"GameObject/material:property\"}}{{/crossLink}}\n property is set to a different {{#crossLink \"Material\"}}Material{{/crossLink}}:\n```` javascript\n // Bind a change callback to the GameObject's Material\n object1.on(\"material\", function(material) {\n    console.log(\"GameObject's Material has changed to: \" + material.id);\n});\n// Now replace that Material with another\n object1.material = new BIMSURFER.Material({\n    id: \"myOtherMaterial\",\n    diffuse: [ 0.3, 0.3, 0.6 ]\n    //..\n});\n ````\n## <a name=\"metadata\">Metadata</a>\nYou can set optional **metadata** on your Components, which can be anything you like. These are intended\n to help manage your components within your application code or content pipeline. You could use metadata to attach\n authoring or version information, like this:\n````javascript\n // Viewer with authoring metadata\n var viewer = new BIMSURFER.Viewer({\n    id: \"myViewer\",\n    metadata: {\n        title: \"My awesome 3D viewer\",\n        author: \"@xeolabs\",\n date: \"February 13 2015\"\n }\n });\n// Material with descriptive metadata\n var material = new BIMSURFER.Material(viewer, {\n    id: \"myMaterial\",\n    diffuse: [1, 0, 0],\n    metadata: {\n        description: \"Bright red color with no textures\",\n        version: \"0.1\",\n        foo: \"bar\"\n    }\n});\n ````\nAs with all properties, you can subscribe and change the metadata like this:\n````javascript\n // Subscribe to changes to the Material's metadata\n material.on(\"metadata\", function(value) {\n    console.log(\"Metadata changed: \" + JSON.stringify(value));\n});\n// Change the Material's metadata, firing our change handler\n material.metadata = {\n    description: \"Bright red color with no textures\",\n    version: \"0.2\",\n    foo: \"baz\"\n};\n ````\n## <a name=\"logging\">Logging</a>\nComponents have methods to log ID-prefixed messages to the JavaScript console:\n````javascript\n material.log(\"Everything is fine, situation normal.\");\n material.warn(\"Wait, whats that red light?\");\n material.error(\"Aw, snap!\");\n ````\nThe logged messages will look like this in the console:\n````text\n [LOG]   myMaterial: Everything is fine, situation normal.\n [WARN]  myMaterial: Wait, whats that red light..\n [ERROR] myMaterial: Aw, snap!\n ````\n## <a name=\"destruction\">Destruction</a>\nGet notification of destruction directly on the Components:\n````javascript\n material.on(\"destroyed\", function() {\n    this.log(\"Component was destroyed: \" + this.id);\n});\n ````\nOr get notification of destruction of any Component within its {{#crossLink \"Viewer\"}}{{/crossLink}}, indiscriminately:\n````javascript\n viewer.on(\"componentDestroyed\", function(component) {\n    this.log(\"Component was destroyed: \" + component.id);\n});\n ````\nThen destroy a component like this:\n````javascript\n material.destroy();\n ````\nOther Components that are linked to it will fall back on a default of some sort. For example, any\n {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that were linked to our {{#crossLink \"Material\"}}{{/crossLink}}\n will then automatically link to the {{#crossLink \"Viewer\"}}Viewer's{{/crossLink}} default {{#crossLink \"Viewer/material:property\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} - creates this Component\n within the default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Component configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Component.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Configs": {
            "name": "Configs",
            "shortname": "Configs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/configs.js",
            "line": 1,
            "description": "## Overview\n\n TODO\n\n ## Example\n\n TODO\n\n ```` javascript\n\n ````",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, creates this Configs within the\n default {{#crossLink \"Viewer\"}}Viewer{{/crossLink}} when omitted",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs configuration",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Configs.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "extends": "Component"
        },
        "Viewer": {
            "name": "Viewer",
            "shortname": "Viewer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "BIMSURFER",
            "namespace": "",
            "file": "src/core/viewer.js",
            "line": 1,
            "description": "The 3D viewer\n\n## Overview\n\nTODO\n\n## Example\n\nTODO",
            "is_constructor": 1,
            "params": [
                {
                    "name": "viewer",
                    "description": "Parent {{#crossLink \"Viewer\"}}{{/crossLink}}.",
                    "type": "Viewer",
                    "optional": true
                },
                {
                    "name": "cfg",
                    "description": "Configs",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "id",
                            "description": "Optional ID, unique among all components in the parent viewer, generated automatically when omitted.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Optional map of user-defined metadata to attach to this Object.",
                            "type": "String:Object",
                            "optional": true
                        }
                    ]
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "src/core/animate/cameraFlyAnimation.js",
            "line": 32,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Fly",
            "module": "BIMSURFER",
            "submodule": "animate"
        },
        {
            "file": "src/core/animate/cameraPathAnimation.js",
            "line": 5,
            "description": "Animates a {@link BIMSURFER.Camera} along a path.",
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/animate/cameraPathAnimation.js",
            "line": 15,
            "description": "Constructor.",
            "is_constructor": 1,
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/animate/cameraPathAnimation.js",
            "line": 24,
            "description": "Activates this camera",
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/animate/cameraPathAnimation.js",
            "line": 50,
            "description": "Initializes the events necessary for the operation of this control",
            "return": {
                "description": "this"
            },
            "class": "Camera",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 70,
            "description": "Defines a viewpoint within a {@link BIMSURFER.Viewer}.",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 75,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 111,
            "description": "Rotate 'eye' about 'look', around the 'up' vector",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 131,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 157,
            "description": "Rotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 179,
            "description": "Rotate 'eye' about 'look' around the X-axis",
            "params": [
                {
                    "name": "angle",
                    "description": "Angle of rotation in degrees",
                    "type": "Number"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 205,
            "description": "Pans the camera along X and Y axis.",
            "params": [
                {
                    "name": "pan",
                    "description": "The pan vector"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 259,
            "description": "Increments/decrements zoom factor, ie. distance between eye and look.",
            "params": [
                {
                    "name": "delta",
                    "description": ""
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 277,
            "description": "Flag which indicates whether this Camera is active or not.\n\nFires an {{#crossLink \"Camera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 352,
            "description": "Fired whenever this Camera's {{#crossLink \"Camera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 377,
            "description": "Position of the eye.\nFires an {{#crossLink \"Camera/eye:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "eye",
            "default": "[0,0,-10]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 396,
            "description": "Position of the point-of-interest.\nFires a {{#crossLink \"Camera/look:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "look",
            "default": "[0,0,0]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/camera/camera.js",
            "line": 415,
            "description": "Direction of the \"up\" vector.\nFires an {{#crossLink \"Camera/up:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "up",
            "default": "[0,1,0]",
            "type": "Array(Number)",
            "class": "Camera",
            "module": "BIMSURFER",
            "submodule": "camera"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 96,
            "description": "The HTML canvas. When this BIMSURFER.Canvas was configured with the ID of an existing canvas within the DOM,\nthis property will be that element, otherwise it will be a full-page canvas that this Canvas has\ncreated by default.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 123,
            "description": "Fired wheneber the WebGL context has been lost",
            "itemtype": "event",
            "name": "webglContextLost",
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 136,
            "description": "Fired whenever the WebGL context has been restored again after having previously being lost",
            "itemtype": "event",
            "name": "webglContextRestored",
            "params": [
                {
                    "name": "value",
                    "description": "The WebGL context object"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 157,
            "description": "Fired whenever the canvas has resized",
            "itemtype": "event",
            "name": "resized",
            "params": [
                {
                    "name": "width",
                    "description": "The new canvas width",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new canvas height",
                    "type": "Number"
                },
                {
                    "name": "aspect",
                    "description": "The new canvas aspect ratio",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 173,
            "description": "Attempts to pick a {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} at the given Canvas-space coordinates within the\nparent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.\n\nIgnores {{#crossLink \"GameObject\"}}GameObjects{{/crossLink}} that are attached\nto either a {{#crossLink \"Stage\"}}Stage{{/crossLink}} with {{#crossLink \"Stage/pickable:property\"}}pickable{{/crossLink}}\nset *false* or a {{#crossLink \"Modes\"}}Modes{{/crossLink}} with {{#crossLink \"Modes/picking:property\"}}picking{{/crossLink}} set *false*.\n\nOn success, will fire a {{#crossLink \"Canvas/picked:event\"}}{{/crossLink}} event on this Canvas, along with\na separate {{#crossLink \"GameObject/picked:event\"}}{{/crossLink}} event on the target {{#crossLink \"GameObject\"}}GameObject{{/crossLink}}.",
            "itemtype": "method",
            "name": "pick",
            "params": [
                {
                    "name": "canvasX",
                    "description": "X-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "Y-axis Canvas coordinate.",
                    "type": "Number"
                },
                {
                    "name": "options",
                    "description": "Pick options.",
                    "type": "*",
                    "optional": true,
                    "props": [
                        {
                            "name": "rayPick",
                            "description": "Whether to perform a 3D ray-intersect pick.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 192,
            "description": "Fired whenever the {{#crossLink \"Canvas/pick:method\"}}{{/crossLink}} method succeeds in picking\na {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} in the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
            "itemtype": "event",
            "name": "picked",
            "params": [
                {
                    "name": "objectId",
                    "description": "The ID of the picked {{#crossLink \"GameObject\"}}GameObject{{/crossLink}} within the parent {{#crossLink \"Scene\"}}Scene{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "canvasX",
                    "description": "The X-axis Canvas coordinate that was picked.",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The Y-axis Canvas coordinate that was picked.",
                    "type": "Number"
                }
            ],
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 203,
            "description": "Creates a canvas",
            "access": "private",
            "tagname": "",
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 225,
            "description": "Initialises the WebGL context",
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/canvas/canvas.js",
            "line": 238,
            "description": "Fired whenever the canvas failed to get a WebGL context, which probably means that WebGL\nis either unsupported or has been disabled.",
            "itemtype": "event",
            "name": "webglContextFailed",
            "class": "Canvas",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/control/cameraControl.js",
            "line": 52,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/cameraControl.js",
            "line": 111,
            "description": "The {{#crossLink \"Camera\"}}{{/crossLink}} being controlled.",
            "itemtype": "property",
            "name": "camera",
            "type": "Camera",
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/cameraControl.js",
            "line": 158,
            "description": "Flag which indicates whether this CameraControl is active or not.\n\nFires an {{#crossLink \"CameraControl/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/cameraControl.js",
            "line": 179,
            "description": "Fired whenever this CameraControl's {{#crossLink \"CameraControl/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "CameraControl",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/clickSelectObjects.js",
            "line": 42,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/clickSelectObjects.js",
            "line": 62,
            "description": "Flag which indicates whether this ClickSelectObjects is active or not.\n\nFires a {{#crossLink \"ClickSelectObjects/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/clickSelectObjects.js",
            "line": 139,
            "description": "Fired whenever this ClickSelectObjects's {{#crossLink \"ClickSelectObjects/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "ClickSelectObjects",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardAxisCamera.js",
            "line": 34,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardAxisCamera.js",
            "line": 54,
            "description": "Flag which indicates whether this KeyboardAxisCamera is active or not.\n\nFires an {{#crossLink \"KeyboardAxisCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardAxisCamera.js",
            "line": 174,
            "description": "Fired whenever this KeyboardAxisCamera's {{#crossLink \"KeyboardAxisCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardAxisCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardOrbitCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardOrbitCamera.js",
            "line": 57,
            "description": "Flag which indicates whether this KeyboardOrbitCamera is active or not.\n\nFires an {{#crossLink \"KeyboardOrbitCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardOrbitCamera.js",
            "line": 139,
            "description": "Fired whenever this KeyboardOrbitCamera's {{#crossLink \"KeyboardOrbitCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardPanCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardPanCamera.js",
            "line": 61,
            "description": "Flag which indicates whether this KeyboardPanCamera is active or not.\n\nFires an {{#crossLink \"KeyboardPanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardPanCamera.js",
            "line": 140,
            "description": "Fired whenever this KeyboardPanCamera's {{#crossLink \"KeyboardPanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardPanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardZoomCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardZoomCamera.js",
            "line": 61,
            "description": "Flag which indicates whether this KeyboardZoomCamera is active or not.\n\nFires an {{#crossLink \"KeyboardZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/keyboardZoomCamera.js",
            "line": 120,
            "description": "Fired whenever this KeyboardZoomCamera's {{#crossLink \"KeyboardZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "KeyboardZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseOrbitCamera.js",
            "line": 39,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseOrbitCamera.js",
            "line": 63,
            "description": "Flag which indicates whether this MouseOrbitCamera is active or not.\n\nFires an {{#crossLink \"MouseOrbitCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseOrbitCamera.js",
            "line": 152,
            "description": "Fired whenever this MouseOrbitCamera's {{#crossLink \"MouseOrbitCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseOrbitCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mousePanCamera.js",
            "line": 40,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mousePanCamera.js",
            "line": 69,
            "description": "Flag which indicates whether this MousePanCamera is active or not.\n\nFires an {{#crossLink \"MousePanCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mousePanCamera.js",
            "line": 154,
            "description": "Fired whenever this MousePanCamera's {{#crossLink \"MousePanCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MousePanCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseZoomCamera.js",
            "line": 37,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseZoomCamera.js",
            "line": 64,
            "description": "Flag which indicates whether this MouseZoomCamera is active or not.\n\nFires an {{#crossLink \"MouseZoomCamera/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/control/mouseZoomCamera.js",
            "line": 170,
            "description": "Fired whenever this MouseZoomCamera's {{#crossLink \"MouseZoomCamera/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "MouseZoomCamera",
            "module": "BIMSURFER",
            "submodule": "control"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 33,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 44,
            "description": "The {{#crossLink \"ObjectSet\"}}{{/crossLink}} that this Effect applies to.",
            "itemtype": "property",
            "name": "objectSet",
            "type": "ObjectSet",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 66,
            "description": "Flag which indicates whether this Effect is active or not.\n\nFires an {{#crossLink \"Effect/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 109,
            "description": "Fired whenever this Effect's {{#crossLink \"Effect/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 124,
            "description": "Flag which inverts the {{#crossLink \"Object\"}}Objects{{/crossLink}} that this Effect applies to.\n\n<ul>\n    <li>When true, this Effect applies to {{#crossLink \"Object\"}}Objects{{/crossLink}} that are in\n    the {{#crossLink \"Component/viewer:property\"}}{{/crossLink}} but **not** in the {{#crossLink \"Effect/objectSet:property\"}}{{/crossLink}}.</li>\n\n    <li>When false, this Effect applies to {{#crossLink \"Object\"}}Objects{{/crossLink}} that are in\n    the {{#crossLink \"Component/viewer:property\"}}{{/crossLink}} and **also** in the {{#crossLink \"Effect/objectSet:property\"}}{{/crossLink}}.</li>\n</ul>\n\nFires an {{#crossLink \"Effect/invert:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "invert",
            "type": "Boolean",
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/effect.js",
            "line": 150,
            "description": "Fired whenever this Effect's {{#crossLink \"Effect/invert:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "invert",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Effect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/highlightEffect.js",
            "line": 92,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "HighlightEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/isolateEffect.js",
            "line": 82,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "IsolateEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/effect/xrayEffect.js",
            "line": 82,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "XRayEffect",
            "module": "BIMSURFER",
            "submodule": "effect"
        },
        {
            "file": "src/core/geometry/boxGeometry.js",
            "line": 28,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "BoxGeometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/core/geometry/geometry.js",
            "line": 35,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Geometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/core/geometry/teapotGeometry.js",
            "line": 28,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "TeapotGeometry",
            "module": "BIMSURFER",
            "submodule": "geometry"
        },
        {
            "file": "src/core/input/input.js",
            "line": 111,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 117,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 123,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 129,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 135,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 141,
            "type": "{boolean}",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 172,
            "description": "Fired whenever a key is pressed while the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 197,
            "description": "Fired whenever a key is released while the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}} has input focus.",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "value",
                    "description": "The key code, for example {{#crossLink \"Input/KEY_LEFT_ARROW:property\"}}{{/crossLink}},",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 228,
            "description": "Fired whenever the mouse is pressed over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 257,
            "description": "Fired whenever the mouse is released over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 288,
            "description": "Fired whenever the mouse is double-clicked over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "dblclick",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 304,
            "description": "Fired whenever the mouse is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 322,
            "description": "Fired whenever the mouse wheel is moved over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mousewheel",
            "params": [
                {
                    "name": "delta",
                    "description": "The mouse wheel delta,",
                    "type": "Number"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 346,
            "description": "Fired whenever the mouse is clicked over the parent\n{{#crossLink \"Viewer\"}}Viewer{{/crossLink}}'s {{#crossLink \"Canvas\"}}Canvas{{/crossLink}}.",
            "itemtype": "event",
            "name": "mouseclicked",
            "params": [
                {
                    "name": "value",
                    "description": "The mouse coordinates within the {{#crossLink \"Canvas\"}}Canvas{{/crossLink}},",
                    "type": "[Number, Number]"
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 381,
            "description": "Enable or disable all input handlers",
            "params": [
                {
                    "name": "enable",
                    "description": ""
                }
            ],
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 394,
            "description": "Code for the BACKSPACE key.",
            "itemtype": "property",
            "name": "KEY_BACKSPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 402,
            "description": "Code for the TAB key.",
            "itemtype": "property",
            "name": "KEY_TAB",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 410,
            "description": "Code for the ENTER key.",
            "itemtype": "property",
            "name": "KEY_ENTER",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 418,
            "description": "Code for the SHIFT key.",
            "itemtype": "property",
            "name": "KEY_SHIFT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 426,
            "description": "Code for the CTRL key.",
            "itemtype": "property",
            "name": "KEY_CTRL",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 434,
            "description": "Code for the ALT key.",
            "itemtype": "property",
            "name": "KEY_ALT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 442,
            "description": "Code for the PAUSE_BREAK key.",
            "itemtype": "property",
            "name": "KEY_PAUSE_BREAK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 450,
            "description": "Code for the CAPS_LOCK key.",
            "itemtype": "property",
            "name": "KEY_CAPS_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 458,
            "description": "Code for the ESCAPE key.",
            "itemtype": "property",
            "name": "KEY_ESCAPE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 466,
            "description": "Code for the PAGE_UP key.",
            "itemtype": "property",
            "name": "KEY_PAGE_UP",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 474,
            "description": "Code for the PAGE_DOWN key.",
            "itemtype": "property",
            "name": "KEY_PAGE_DOWN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 482,
            "description": "Code for the END key.",
            "itemtype": "property",
            "name": "KEY_END",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 490,
            "description": "Code for the HOME key.",
            "itemtype": "property",
            "name": "KEY_HOME",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 498,
            "description": "Code for the LEFT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 506,
            "description": "Code for the UP_ARROW key.",
            "itemtype": "property",
            "name": "KEY_UP_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 514,
            "description": "Code for the RIGHT_ARROW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 522,
            "description": "Code for the DOWN_ARROW key.",
            "itemtype": "property",
            "name": "KEY_DOWN_ARROW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 530,
            "description": "Code for the INSERT key.",
            "itemtype": "property",
            "name": "KEY_INSERT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 538,
            "description": "Code for the DELETE key.",
            "itemtype": "property",
            "name": "KEY_DELETE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 546,
            "description": "Code for the 0 key.",
            "itemtype": "property",
            "name": "KEY_NUM_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 554,
            "description": "Code for the 1 key.",
            "itemtype": "property",
            "name": "KEY_NUM_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 562,
            "description": "Code for the 2 key.",
            "itemtype": "property",
            "name": "KEY_NUM_2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 570,
            "description": "Code for the 3 key.",
            "itemtype": "property",
            "name": "KEY_NUM_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 578,
            "description": "Code for the 4 key.",
            "itemtype": "property",
            "name": "KEY_NUM_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 586,
            "description": "Code for the 5 key.",
            "itemtype": "property",
            "name": "KEY_NUM_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 594,
            "description": "Code for the 6 key.",
            "itemtype": "property",
            "name": "KEY_NUM_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 602,
            "description": "Code for the 7 key.",
            "itemtype": "property",
            "name": "KEY_NUM_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 610,
            "description": "Code for the 8 key.",
            "itemtype": "property",
            "name": "KEY_NUM_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 618,
            "description": "Code for the 9 key.",
            "itemtype": "property",
            "name": "KEY_NUM_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 626,
            "description": "Code for the A key.",
            "itemtype": "property",
            "name": "KEY_A",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 634,
            "description": "Code for the B key.",
            "itemtype": "property",
            "name": "KEY_B",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 642,
            "description": "Code for the C key.",
            "itemtype": "property",
            "name": "KEY_C",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 650,
            "description": "Code for the D key.",
            "itemtype": "property",
            "name": "KEY_D",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 658,
            "description": "Code for the E key.",
            "itemtype": "property",
            "name": "KEY_E",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 666,
            "description": "Code for the F key.",
            "itemtype": "property",
            "name": "KEY_F",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 674,
            "description": "Code for the G key.",
            "itemtype": "property",
            "name": "KEY_G",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 682,
            "description": "Code for the H key.",
            "itemtype": "property",
            "name": "KEY_H",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 690,
            "description": "Code for the I key.",
            "itemtype": "property",
            "name": "KEY_I",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 698,
            "description": "Code for the J key.",
            "itemtype": "property",
            "name": "KEY_J",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 706,
            "description": "Code for the K key.",
            "itemtype": "property",
            "name": "KEY_K",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 714,
            "description": "Code for the L key.",
            "itemtype": "property",
            "name": "KEY_L",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 722,
            "description": "Code for the M key.",
            "itemtype": "property",
            "name": "KEY_M",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 730,
            "description": "Code for the N key.",
            "itemtype": "property",
            "name": "KEY_N",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 738,
            "description": "Code for the O key.",
            "itemtype": "property",
            "name": "KEY_O",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 746,
            "description": "Code for the P key.",
            "itemtype": "property",
            "name": "KEY_P",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 754,
            "description": "Code for the Q key.",
            "itemtype": "property",
            "name": "KEY_Q",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 762,
            "description": "Code for the R key.",
            "itemtype": "property",
            "name": "KEY_R",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 770,
            "description": "Code for the S key.",
            "itemtype": "property",
            "name": "KEY_S",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 778,
            "description": "Code for the T key.",
            "itemtype": "property",
            "name": "KEY_T",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 786,
            "description": "Code for the U key.",
            "itemtype": "property",
            "name": "KEY_U",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 794,
            "description": "Code for the V key.",
            "itemtype": "property",
            "name": "KEY_V",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 802,
            "description": "Code for the W key.",
            "itemtype": "property",
            "name": "KEY_W",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 810,
            "description": "Code for the X key.",
            "itemtype": "property",
            "name": "KEY_X",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 818,
            "description": "Code for the Y key.",
            "itemtype": "property",
            "name": "KEY_Y",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 826,
            "description": "Code for the Z key.",
            "itemtype": "property",
            "name": "KEY_Z",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 834,
            "description": "Code for the LEFT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_LEFT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 842,
            "description": "Code for the RIGHT_WINDOW key.",
            "itemtype": "property",
            "name": "KEY_RIGHT_WINDOW",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 850,
            "description": "Code for the SELECT key.",
            "itemtype": "property",
            "name": "KEY_SELECT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 858,
            "description": "Code for the number pad 0 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_0",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 866,
            "description": "Code for the number pad 1 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 874,
            "description": "Code for the number pad 2 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD 2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 882,
            "description": "Code for the number pad 3 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 890,
            "description": "Code for the number pad 4 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 898,
            "description": "Code for the number pad 5 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 906,
            "description": "Code for the number pad 6 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 914,
            "description": "Code for the number pad 7 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 922,
            "description": "Code for the number pad 8 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 930,
            "description": "Code for the number pad 9 key.",
            "itemtype": "property",
            "name": "KEY_NUMPAD_9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 938,
            "description": "Code for the MULTIPLY key.",
            "itemtype": "property",
            "name": "KEY_MULTIPLY",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 946,
            "description": "Code for the ADD key.",
            "itemtype": "property",
            "name": "KEY_ADD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 954,
            "description": "Code for the SUBTRACT key.",
            "itemtype": "property",
            "name": "KEY_SUBTRACT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 962,
            "description": "Code for the DECIMAL POINT key.",
            "itemtype": "property",
            "name": "KEY_DECIMAL_POINT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 970,
            "description": "Code for the DIVIDE key.",
            "itemtype": "property",
            "name": "KEY_DIVIDE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 978,
            "description": "Code for the F1 key.",
            "itemtype": "property",
            "name": "KEY_F1",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 986,
            "description": "Code for the F2 key.",
            "itemtype": "property",
            "name": "KEY_F2",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 994,
            "description": "Code for the F3 key.",
            "itemtype": "property",
            "name": "KEY_F3",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1002,
            "description": "Code for the F4 key.",
            "itemtype": "property",
            "name": "KEY_F4",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1010,
            "description": "Code for the F5 key.",
            "itemtype": "property",
            "name": "KEY_F5",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1018,
            "description": "Code for the F6 key.",
            "itemtype": "property",
            "name": "KEY_F6",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1026,
            "description": "Code for the F7 key.",
            "itemtype": "property",
            "name": "KEY_F7",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1034,
            "description": "Code for the F8 key.",
            "itemtype": "property",
            "name": "KEY_F8",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1042,
            "description": "Code for the F9 key.",
            "itemtype": "property",
            "name": "KEY_F9",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1050,
            "description": "Code for the F10 key.",
            "itemtype": "property",
            "name": "KEY_F10",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1058,
            "description": "Code for the F11 key.",
            "itemtype": "property",
            "name": "KEY_F11",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1066,
            "description": "Code for the F12 key.",
            "itemtype": "property",
            "name": "KEY_F12",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1074,
            "description": "Code for the NUM_LOCK key.",
            "itemtype": "property",
            "name": "KEY_NUM_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1082,
            "description": "Code for the SCROLL_LOCK key.",
            "itemtype": "property",
            "name": "KEY_SCROLL_LOCK",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1090,
            "description": "Code for the SEMI_COLON key.",
            "itemtype": "property",
            "name": "KEY_SEMI_COLON",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1098,
            "description": "Code for the EQUAL_SIGN key.",
            "itemtype": "property",
            "name": "KEY_EQUAL_SIGN",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1106,
            "description": "Code for the COMMA key.",
            "itemtype": "property",
            "name": "KEY_COMMA",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1114,
            "description": "Code for the DASH key.",
            "itemtype": "property",
            "name": "KEY_DASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1122,
            "description": "Code for the PERIOD key.",
            "itemtype": "property",
            "name": "KEY_PERIOD",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1130,
            "description": "Code for the FORWARD_SLASH key.",
            "itemtype": "property",
            "name": "KEY_FORWARD_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1138,
            "description": "Code for the GRAVE_ACCENT key.",
            "itemtype": "property",
            "name": "KEY_GRAVE_ACCENT",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1146,
            "description": "Code for the OPEN_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_OPEN_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1154,
            "description": "Code for the BACK_SLASH key.",
            "itemtype": "property",
            "name": "KEY_BACK_SLASH",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1162,
            "description": "Code for the CLOSE_BRACKET key.",
            "itemtype": "property",
            "name": "KEY_CLOSE_BRACKET",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1170,
            "description": "Code for the SINGLE_QUOTE key.",
            "itemtype": "property",
            "name": "KEY_SINGLE_QUOTE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/input/input.js",
            "line": 1178,
            "description": "Code for the SPACE key.",
            "itemtype": "property",
            "name": "KEY_SPACE",
            "final": 1,
            "type": "Number",
            "class": "Input",
            "module": "BIMSURFER",
            "submodule": "input"
        },
        {
            "file": "src/core/light/ambientLight.js",
            "line": 46,
            "description": "The color of this AmbientLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "AmbientLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/dirLight.js",
            "line": 60,
            "description": "The direction of this DirLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"DirLight/space:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "dir",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/dirLight.js",
            "line": 83,
            "description": "The color of this DirLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "DirLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/dirLight.js",
            "line": 104,
            "description": "Indicates which coordinate space this DirLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "DirLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/light.js",
            "line": 30,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/light.js",
            "line": 54,
            "description": "Flag which indicates whether this Light is active or not.\n\nFires an {{#crossLink \"Light/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/light.js",
            "line": 79,
            "description": "Fired whenever this Light's {{#crossLink \"Light/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Light",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 62,
            "description": "The position of this PointLight.\n\nThis will be either World- or View-space, depending on the value of {{#crossLink \"PointLight/space:property\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "pos",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 85,
            "description": "The color of this PointLight.",
            "itemtype": "property",
            "name": "color",
            "default": "[0.7, 0.7, 0.8]",
            "type": "Array(Number)",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 106,
            "description": "The constant attenuation factor for this PointLight.",
            "itemtype": "property",
            "name": "constantAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 126,
            "description": "The linear attenuation factor for this PointLight.",
            "itemtype": "property",
            "name": "linearAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 146,
            "description": "The quadratic attenuation factor for this Pointlight.",
            "itemtype": "property",
            "name": "quadraticAttenuation",
            "default": "0",
            "type": "Number",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/light/pointLight.js",
            "line": 166,
            "description": "Indicates which coordinate space this PointLight is in.\n\nSupported values are:\n\n<ul>\n<li>\"view\" - View space, aligned within the view volume as if fixed to the viewer's head</li>\n<li>\"world\" - World space, fixed within the world, moving within the view volume with respect to camera</li>\n</ul>",
            "itemtype": "property",
            "name": "space",
            "default": "\"view\"",
            "type": "String",
            "class": "PointLight",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 42,
            "description": "Returns a new UUID.",
            "itemtype": "method",
            "name": "createUUID",
            "static": 1,
            "return": {
                "description": "string The new UUID"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 83,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 90,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 97,
            "description": "Floating-point modulus",
            "params": [
                {
                    "name": "a",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 114,
            "description": "Negates a four-element vector.",
            "itemtype": "method",
            "name": "negateVec4",
            "params": [
                {
                    "name": "v",
                    "description": "Vector to negate",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 132,
            "description": "Adds one four-element vector to another.",
            "itemtype": "method",
            "name": "addVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 151,
            "description": "Adds a scalar value to each element of a four-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 170,
            "description": "Adds one three-element vector to another.",
            "itemtype": "method",
            "name": "addVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 188,
            "description": "Adds a scalar value to each element of a three-element vector.",
            "itemtype": "method",
            "name": "addVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 206,
            "description": "Subtracts one four-element vector from another.",
            "itemtype": "method",
            "name": "subVec4",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 225,
            "description": "Subtracts one three-element vector from another.",
            "itemtype": "method",
            "name": "subVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 243,
            "description": "Subtracts one two-element vector from another.",
            "itemtype": "method",
            "name": "subVec2",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Vector to subtract",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 260,
            "description": "Subtracts a scalar value from each element of a four-element vector.",
            "itemtype": "method",
            "name": "subVec4Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 279,
            "description": "Sets each element of a 4-element vector to a scalar value minus the value of that element.",
            "itemtype": "method",
            "name": "subScalarVec4",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 298,
            "description": "Multiplies one three-element vector by another.",
            "itemtype": "method",
            "name": "mulVec3",
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 317,
            "description": "Multiplies each element of a four-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec34calar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 336,
            "description": "Multiplies each element of a three-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec3Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 354,
            "description": "Multiplies each element of a two-element vector by a scalar.",
            "itemtype": "method",
            "name": "mulVec2Scalar",
            "params": [
                {
                    "name": "v",
                    "description": "The vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "s",
                    "description": "The scalar",
                    "type": "Number"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, v otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 371,
            "description": "Divides one three-element vector by another.",
            "itemtype": "method",
            "name": "divVec3",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 390,
            "description": "Divides one four-element vector by another.",
            "itemtype": "method",
            "name": "divVec4",
            "static": 1,
            "params": [
                {
                    "name": "u",
                    "description": "First vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "v",
                    "description": "Second vector",
                    "type": "Array(Number)"
                },
                {
                    "name": "dest",
                    "description": "Destination vector",
                    "type": "Array(Number)",
                    "optional": true
                }
            ],
            "return": {
                "description": "dest if specified, u otherwise",
                "type": "Array(Number)"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 410,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 427,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 444,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 463,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 497,
            "params": [
                {
                    "name": "u",
                    "description": "vec3"
                },
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, u otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 516,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 521,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 526,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 531,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 536,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 541,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 546,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 551,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 556,
            "params": [
                {
                    "name": "v",
                    "description": "vec3"
                },
                {
                    "name": "dest",
                    "description": "vec3 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 566,
            "params": [
                {
                    "name": "v",
                    "description": "vec4"
                },
                {
                    "name": "dest",
                    "description": "vec4 - optional destination"
                }
            ],
            "return": {
                "description": "[] dest if specified, v otherwise"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 577,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 589,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 591,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 596,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 605,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 615,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 620,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 625,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 635,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 640,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 645,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 650,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 661,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 690,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 720,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 750,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 755,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 785,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 815,
            "params": [
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 845,
            "params": [
                {
                    "name": "a",
                    "description": "mat4"
                },
                {
                    "name": "b",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, a otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 888,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "s",
                    "description": "scalar"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, m otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 918,
            "params": [
                {
                    "name": "m",
                    "description": "mat4"
                },
                {
                    "name": "v",
                    "description": "vec4"
                }
            ],
            "return": {
                "description": "[]"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 934,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 981,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 996,
            "params": [
                {
                    "name": "mat",
                    "description": "mat4"
                },
                {
                    "name": "dest",
                    "description": "mat4 - optional destination"
                }
            ],
            "return": {
                "description": "dest if specified, mat otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1047,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1052,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1061,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1066,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1071,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1119,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1124,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1133,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1138,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1143,
            "params": [
                {
                    "name": "pos",
                    "description": "vec3 position of the viewer"
                },
                {
                    "name": "target",
                    "description": "vec3 point the viewer is looking at"
                },
                {
                    "name": "up",
                    "description": "vec3 pointing \"up\""
                },
                {
                    "name": "dest",
                    "description": "mat4 Optional, mat4 frustum matrix will be written into"
                }
            ],
            "return": {
                "description": "dest if specified, a new mat4 otherwise",
                "type": "Mat4"
            },
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1236,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1241,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1273,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1309,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1337,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1354,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1366,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1397,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1417,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1423,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1436,
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/math/math.js",
            "line": 1443,
            "params": [
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "class": "math",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/boxObject.js",
            "line": 27,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "BoxObject",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 87,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 362,
            "description": "Whether this Object is active or not.\n\nFires an {{#crossLink \"Object/active:event\"}}{{/crossLink}} event on change.",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 382,
            "description": "Fired whenever this Object's {{#crossLink \"Object/active:property\"}}{{/crossLink}} property changes.",
            "itemtype": "event",
            "name": "active",
            "params": [
                {
                    "name": "value",
                    "description": "The property's new value"
                }
            ],
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 395,
            "description": "Whether this Object is transparent.",
            "itemtype": "property",
            "name": "transparent",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 424,
            "description": "Whether this Object is highlighted.",
            "itemtype": "property",
            "name": "highlighted",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 452,
            "description": "Whether this Object is X-rayed",
            "itemtype": "property",
            "name": "xray",
            "default": "false",
            "type": "Boolean",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 481,
            "description": "The color of this Object.",
            "itemtype": "property",
            "name": "color",
            "default": "[1.0, 1.0, 1.0]",
            "type": "Array(Number)",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 514,
            "description": "Factor in the range [0..1] indicating how transparent this Object is.\n\nA value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n\nThis Object will appear transparent only if {{#crossLink \"Object/transparent:property\"}}{{/crossLink}} is also\nset to **true**.",
            "itemtype": "property",
            "name": "opacity",
            "default": "1.0",
            "type": "Number",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 540,
            "description": "This Object's transformation matrix.",
            "itemtype": "property",
            "name": "matrix",
            "default": "[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]",
            "type": "{Array of Number}",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 565,
            "description": "The World-space boundary of this Object.",
            "itemtype": "property",
            "name": "boundary",
            "type": "{*}",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/object.js",
            "line": 589,
            "description": "The World-space center of this Object.",
            "itemtype": "property",
            "name": "center",
            "type": "{Array of Number}",
            "class": "Object",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/objectSet.js",
            "line": 150,
            "description": "A selection of {@link BIMSURFER.Object}s within a {@link BIMSURFER.Viewer}.",
            "class": "ObjectSet",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/objectSet.js",
            "line": 155,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "ObjectSet",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/objectSet.js",
            "line": 400,
            "description": "Iterates with a callback over the objects in this selection",
            "params": [
                {
                    "name": "typeNames",
                    "description": "List of type names",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback called for each Component of the given types",
                    "type": "Function"
                }
            ],
            "class": "ObjectSet",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/objectSet.js",
            "line": 482,
            "description": "The axis-aligned World-space boundary of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "boundary",
            "readonly": "",
            "type": "{{}}",
            "class": "ObjectSet",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/objectSet.js",
            "line": 502,
            "description": "The World-space center of the {{#crossLink \"Object\"}}Objects{{/crossLink}} within this ObjectSet.",
            "itemtype": "property",
            "name": "center",
            "readonly": "",
            "type": "{{}}",
            "class": "ObjectSet",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/object/teapotObject.js",
            "line": 27,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "TeapotObject",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/util/map.js",
            "line": 7,
            "description": "Generic map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/util/map.js",
            "line": 13,
            "itemtype": "property",
            "name": "Items in this map",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/util/map.js",
            "line": 21,
            "description": "Adds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/util/map.js",
            "line": 53,
            "description": "Removes the item of the given ID from the map and returns it",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 16,
            "description": "Tests if the given object is an array",
            "access": "private",
            "tagname": "",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 24,
            "description": "Tests if the given value is a string",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 34,
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 40,
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 51,
            "description": "Add properties of o to o2 where undefined or null on o2",
            "access": "private",
            "tagname": "",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/BIMSURFER.js",
            "line": 66,
            "description": "Constructor: BIMSURFER.Class\nBase class used to construct all other classes. Includes support for multiple inheritance.",
            "class": "BIMSURFER",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 177,
            "description": "JavaScript class name for this Component.",
            "itemtype": "property",
            "name": "className",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 191,
            "description": "The {{#crossLink \"Viewer\"}}{{/crossLink}} that contains this Component.",
            "itemtype": "property",
            "name": "viewer",
            "type": "{Viewer}",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 200,
            "description": "Metadata on this component.",
            "itemtype": "property",
            "name": "metadata",
            "type": "Object",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 208,
            "description": "Unique ID for this Component within its parent {{#crossLink \"Viewer\"}}Viewer{{/crossLink}}.",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "final": 1,
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 217,
            "description": "True as soon as this Component has been destroyed",
            "itemtype": "property",
            "name": "destroyed",
            "type": "Boolean",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 239,
            "description": "Initializes this component",
            "params": [
                {
                    "name": "cfg",
                    "description": ""
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 247,
            "description": "Fires an event on this component.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 274,
            "description": "Subscribes to an event on this component.\n\nThe callback is be called with this component as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 304,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Component/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Component/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 323,
            "description": "Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 341,
            "description": "Logs a console debugging message for this component.\n\nThe console message will have this format: *````[LOG] <component id>: <message>````*",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 353,
            "description": "Logs an error for this component to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] <component id>: <message>````*",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 365,
            "description": "Logs a warning for this component to the JavaScript console.\n\nThe console message will have this format: *````[WARN] <component id>: <message>````*",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 377,
            "description": "Destroys this component.\n\nRemoves this Component from its {{#crossLink \"Viewer\"}}{{/crossLink}}.\n\nFires a {{#crossLink \"Component/destroyed:event\"}}{{/crossLink}} event on this Component.",
            "itemtype": "method",
            "name": "destroy",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/component.js",
            "line": 397,
            "description": "Fired when this Component is destroyed.",
            "itemtype": "event",
            "name": "destroyed",
            "class": "Component",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 30,
            "is_constructor": 1,
            "params": [
                {
                    "name": "bimServerApi",
                    "description": "A BIMSurfer API",
                    "type": "Object"
                },
                {
                    "name": "div",
                    "description": "The viewport div within which the canvas will be inserted in the DOM",
                    "type": "String|DOMelement"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "autoStart",
                    "description": "Starts this Viewer automatically when true",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 43,
            "description": "The properties",
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 48,
            "description": "Fires an event on this Viewer.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 72,
            "description": "Subscribes to an event on this Viewer.\n\nThe callback is be called with this Viewer as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 102,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Viewer/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Viewer/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/configs.js",
            "line": 121,
            "description": "Subscribes to the next occurrence of the given event on this Viewer, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Configs",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/constants.js",
            "line": 5,
            "description": "Time in milliseconds before a connect or login action will timeout",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/constants.js",
            "line": 10,
            "description": "The default IFC Types to load",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/constants.js",
            "line": 134,
            "description": "Returns a number whose value is limited to the given range.\n\nExample: limit the output of this computation to between 0 and 255\n(x * 255).clamp(0, 255)",
            "params": [
                {
                    "name": "s",
                    "description": "The number to clamp",
                    "type": "Number"
                },
                {
                    "name": "min",
                    "description": "The lower boundary of the output range",
                    "type": "Number"
                },
                {
                    "name": "max",
                    "description": "The upper boundary of the output range",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A number in the range [min, max]"
            },
            "type": "Number",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 56,
            "description": "The BIMServer API",
            "itemtype": "property",
            "name": "bimServerApi",
            "type": "{Object}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 68,
            "description": "Servers connected to this Viewer.",
            "itemtype": "property",
            "name": "connectedServers",
            "type": "{Array of BIMSURFER.Server}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 79,
            "description": "The HTML Canvas that this Viewer renders to. This is inserted into the div we configured this Viewer with.",
            "itemtype": "property",
            "name": "canvas",
            "type": "{HTMLCanvasElement}",
            "final": 1,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 94,
            "description": "The SceneJS scene graph that renders 3D content for this Viewer.",
            "itemtype": "property",
            "name": "scene",
            "type": "{SceneJS.Scene}",
            "final": 1,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 147,
            "description": "ID of this Viewer",
            "itemtype": "property",
            "name": "id",
            "type": "{String}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 216,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their IDs.",
            "itemtype": "property",
            "name": "components",
            "type": "{{String:Component}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 224,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their class names.",
            "itemtype": "property",
            "name": "classes",
            "type": "{{String:{String:Component}}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 232,
            "description": "The {{#crossLink \"Component\"}}Components{{/crossLink}} within this Viewer, mapped to their IFC type names.",
            "itemtype": "property",
            "name": "types",
            "type": "{{String:{String:Component}}}",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 284,
            "description": "Geometry loaders",
            "itemtype": "property",
            "name": "geometryLoaders",
            "type": "{Array of }",
            "final": 1,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 303,
            "description": "Input handling",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 309,
            "description": "Adds a {{#crossLink \"Component\"}}{{/crossLink}} to this viewer.\n\nThis is called within the constructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.\n\nThe {{#crossLink \"Component\"}}{{/crossLink}} is assigned a\nunique {{#crossLink \"Component/id:property\"}}{{/crossLink}} if it does not yet have one.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "component",
                    "description": "The Component to add.",
                    "type": "BIMSURFER.Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 360,
            "description": "Fired whenever a Component has been created within this Viewer.",
            "itemtype": "event",
            "name": "componentCreated",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was created",
                    "type": "Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 368,
            "description": "Removes a {{#crossLink \"Component\"}}{{/crossLink}} from this Viewer.\n\nThis is called within the destructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "component",
                    "description": "The component to remove",
                    "type": "BIMSURFER.Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 395,
            "description": "Fired whenever a component within this Viewer has been destroyed.",
            "itemtype": "event",
            "name": "componentDestroyed",
            "params": [
                {
                    "name": "value",
                    "description": "The component that was destroyed",
                    "type": "Component"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 403,
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 425,
            "description": "Stores a connection to a server for later use.",
            "params": [
                {
                    "name": "server",
                    "description": "The server connection to store.",
                    "type": "BIMSURFER.Server"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 436,
            "description": "Resizes the viewport and updates the aspect ratio",
            "params": [
                {
                    "name": "width",
                    "description": "The new width in px",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The new height in px",
                    "type": "Number"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 462,
            "description": "Loads and shows the geometry of the revisions that are in the load queue",
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 484,
            "description": "Iterates with a callback over Components of the given classes",
            "params": [
                {
                    "name": "classNames",
                    "description": "List of class names",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback called for each Component of the given classes",
                    "type": "Function"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 505,
            "description": "Iterates with a callback over Components of the given IFC types",
            "params": [
                {
                    "name": "typeNames",
                    "description": "List of type names",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback called for each Component of the given types",
                    "type": "Function"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 526,
            "description": "Shows an IFC type of a revision.",
            "params": [
                {
                    "name": "typeNames",
                    "description": "Names of types to hide",
                    "type": "Array of String"
                },
                {
                    "name": "revision",
                    "description": "The revision",
                    "type": "BIMSURFER.ProjectRevision instance"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 540,
            "description": "Hides an IFC type of a revision.",
            "params": [
                {
                    "name": "typeNames",
                    "description": "Names of types to hide",
                    "type": "Array of String"
                },
                {
                    "name": "revision",
                    "description": "The revision",
                    "type": "BIMSURFER.ProjectRevision instance"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 553,
            "description": "Hides all the types of a revision",
            "params": [
                {
                    "name": "revision",
                    "description": "The revision to hide",
                    "type": "BIMSURFER.ProjectRevision"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 565,
            "description": "Shows a revision",
            "params": [
                {
                    "name": "revision",
                    "description": "The revision to show",
                    "type": "BIMSURFER.ProjectRevision"
                },
                {
                    "name": "types",
                    "description": "The types to show (default = BIMSURFER.constants.defaultTypes)",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 594,
            "description": "Fires an event on this Viewer.\n\nNotifies existing subscribers to the event, retains the event to give to\nany subsequent notifications on that location as they are made.",
            "itemtype": "method",
            "name": "fire",
            "params": [
                {
                    "name": "event",
                    "description": "The event type name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The event",
                    "type": "Object"
                },
                {
                    "name": "forget",
                    "description": "When true, does not retain for subsequent subscribers",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 621,
            "description": "Subscribes to an event on this Viewer.\n\nThe callback is be called with this Viewer as scope.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "Publication event",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "Handle to the subscription, which may be used to unsubscribe with {@link #off}.",
                "type": "String"
            },
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 651,
            "description": "Cancels an event subscription that was previously made with {{#crossLink \"Viewer/on:method\"}}{{/crossLink}} or\n{{#crossLink \"Viewer/once:method\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "handle",
                    "description": "Publication handle",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 670,
            "description": "Subscribes to the next occurrence of the given event on this Viewer, then un-subscribes as soon as the event is handled.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "Data event to listen to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Called when fresh data is available at the event",
                    "type": "Function(data)"
                },
                {
                    "name": "scope",
                    "description": "Scope for the callback",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 688,
            "description": "Logs a console debugging message for this View.\n\nThe console message will have this format: *````[LOG] BIMSERVER.Viewer: <message>````*",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 700,
            "description": "Logs an error for this View to the JavaScript console.\n\nThe console message will have this format: *````[ERROR] BIMSERVER.Viewer: <message>````*",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        },
        {
            "file": "src/core/viewer.js",
            "line": 712,
            "description": "Logs a warning for this View to the JavaScript console.\n\nThe console message will have this format: *````[WARN] BIMSERVER.Viewer: <message>````*",
            "itemtype": "method",
            "name": "warn",
            "params": [
                {
                    "name": "message",
                    "description": "The message to log",
                    "type": "String"
                }
            ],
            "class": "Viewer",
            "module": "BIMSURFER"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/math/math.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/BIMSURFER.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/core/constants.js:134"
        },
        {
            "message": "Missing item type\nAnimates a {@link BIMSURFER.Camera} along a path.",
            "line": " src/core/animate/cameraPathAnimation.js:5"
        },
        {
            "message": "Missing item type\nConstructor.",
            "line": " src/core/animate/cameraPathAnimation.js:15"
        },
        {
            "message": "Missing item type\nActivates this camera",
            "line": " src/core/animate/cameraPathAnimation.js:24"
        },
        {
            "message": "Missing item type\nInitializes the events necessary for the operation of this control",
            "line": " src/core/animate/cameraPathAnimation.js:50"
        },
        {
            "message": "Missing item type\nDefines a viewpoint within a {@link BIMSURFER.Viewer}.",
            "line": " src/core/camera/camera.js:70"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look', around the 'up' vector",
            "line": " src/core/camera/camera.js:111"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/core/camera/camera.js:131"
        },
        {
            "message": "Missing item type\nRotate 'look' about 'eye', around the 'up' vector\n\n<p>Applies constraints added with {@link #addConstraint}.</p>",
            "line": " src/core/camera/camera.js:157"
        },
        {
            "message": "Missing item type\nRotate 'eye' about 'look' around the X-axis",
            "line": " src/core/camera/camera.js:179"
        },
        {
            "message": "Missing item type\nPans the camera along X and Y axis.",
            "line": " src/core/camera/camera.js:205"
        },
        {
            "message": "Missing item type\nIncrements/decrements zoom factor, ie. distance between eye and look.",
            "line": " src/core/camera/camera.js:259"
        },
        {
            "message": "Missing item type\nCreates a canvas",
            "line": " src/core/canvas/canvas.js:203"
        },
        {
            "message": "Missing item type\nInitialises the WebGL context",
            "line": " src/core/canvas/canvas.js:225"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:111"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:117"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:123"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:129"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:135"
        },
        {
            "message": "Missing item type",
            "line": " src/core/input/input.js:141"
        },
        {
            "message": "Missing item type\nEnable or disable all input handlers",
            "line": " src/core/input/input.js:381"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:83"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:90"
        },
        {
            "message": "Missing item type\nFloating-point modulus",
            "line": " src/core/math/math.js:97"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:410"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:427"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:444"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:463"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:497"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:516"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:521"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:526"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:531"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:536"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:541"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:546"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:551"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:556"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:566"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:577"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:589"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:591"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:596"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:605"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:615"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:620"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:625"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:635"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:640"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:645"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:650"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:661"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:690"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:720"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:750"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:755"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:785"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:815"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:845"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:888"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:918"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:934"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:981"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:996"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1047"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1052"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1061"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1066"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1071"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1119"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1124"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1133"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1138"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1143"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1236"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1241"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1273"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1309"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1337"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1354"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1366"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1397"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1417"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1423"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1436"
        },
        {
            "message": "Missing item type",
            "line": " src/core/math/math.js:1443"
        },
        {
            "message": "Missing item type\nA selection of {@link BIMSURFER.Object}s within a {@link BIMSURFER.Viewer}.",
            "line": " src/core/object/objectSet.js:150"
        },
        {
            "message": "Missing item type\nIterates with a callback over the objects in this selection",
            "line": " src/core/object/objectSet.js:400"
        },
        {
            "message": "Missing item type\nGeneric map of IDs to items - can generate own IDs or accept given IDs. IDs should be strings in order to not\nclash with internally generated IDs, which are numbers.",
            "line": " src/core/util/map.js:7"
        },
        {
            "message": "Missing item type\nAdds an item to the map and returns the ID of the item in the map. If an ID is given, the item is\nmapped to that ID. Otherwise, the map automatically generates the ID and maps to that.\n\nid = myMap.addItem(\"foo\") // ID internally generated\n\nid = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"",
            "line": " src/core/util/map.js:21"
        },
        {
            "message": "Missing item type\nRemoves the item of the given ID from the map and returns it",
            "line": " src/core/util/map.js:53"
        },
        {
            "message": "Missing item type\nTests if the given object is an array",
            "line": " src/core/BIMSURFER.js:16"
        },
        {
            "message": "Missing item type\nTests if the given value is a string",
            "line": " src/core/BIMSURFER.js:24"
        },
        {
            "message": "Missing item type",
            "line": " src/core/BIMSURFER.js:34"
        },
        {
            "message": "Missing item type",
            "line": " src/core/BIMSURFER.js:40"
        },
        {
            "message": "Missing item type\nAdd properties of o to o2 where undefined or null on o2",
            "line": " src/core/BIMSURFER.js:51"
        },
        {
            "message": "Missing item type\nConstructor: BIMSURFER.Class\nBase class used to construct all other classes. Includes support for multiple inheritance.",
            "line": " src/core/BIMSURFER.js:66"
        },
        {
            "message": "Missing item type\nInitializes this component",
            "line": " src/core/component.js:239"
        },
        {
            "message": "Missing item type",
            "line": " src/core/configs.js:30"
        },
        {
            "message": "Missing item type\nThe properties",
            "line": " src/core/configs.js:43"
        },
        {
            "message": "Missing item type\nTime in milliseconds before a connect or login action will timeout",
            "line": " src/core/constants.js:5"
        },
        {
            "message": "Missing item type\nThe default IFC Types to load",
            "line": " src/core/constants.js:10"
        },
        {
            "message": "Missing item type\nReturns a number whose value is limited to the given range.\n\nExample: limit the output of this computation to between 0 and 255\n(x * 255).clamp(0, 255)",
            "line": " src/core/constants.js:134"
        },
        {
            "message": "Missing item type\nInput handling",
            "line": " src/core/viewer.js:303"
        },
        {
            "message": "Missing item type\nAdds a {{#crossLink \"Component\"}}{{/crossLink}} to this viewer.\n\nThis is called within the constructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.\n\nThe {{#crossLink \"Component\"}}{{/crossLink}} is assigned a\nunique {{#crossLink \"Component/id:property\"}}{{/crossLink}} if it does not yet have one.",
            "line": " src/core/viewer.js:309"
        },
        {
            "message": "Missing item type\nRemoves a {{#crossLink \"Component\"}}{{/crossLink}} from this Viewer.\n\nThis is called within the destructors of {{#crossLink \"Component\"}}{{/crossLink}} subclasses.",
            "line": " src/core/viewer.js:368"
        },
        {
            "message": "Missing item type",
            "line": " src/core/viewer.js:403"
        },
        {
            "message": "Missing item type\nStores a connection to a server for later use.",
            "line": " src/core/viewer.js:425"
        },
        {
            "message": "Missing item type\nResizes the viewport and updates the aspect ratio",
            "line": " src/core/viewer.js:436"
        },
        {
            "message": "Missing item type\nLoads and shows the geometry of the revisions that are in the load queue",
            "line": " src/core/viewer.js:462"
        },
        {
            "message": "Missing item type\nIterates with a callback over Components of the given classes",
            "line": " src/core/viewer.js:484"
        },
        {
            "message": "Missing item type\nIterates with a callback over Components of the given IFC types",
            "line": " src/core/viewer.js:505"
        },
        {
            "message": "Missing item type\nShows an IFC type of a revision.",
            "line": " src/core/viewer.js:526"
        },
        {
            "message": "Missing item type\nHides an IFC type of a revision.",
            "line": " src/core/viewer.js:540"
        },
        {
            "message": "Missing item type\nHides all the types of a revision",
            "line": " src/core/viewer.js:553"
        },
        {
            "message": "Missing item type\nShows a revision",
            "line": " src/core/viewer.js:565"
        }
    ]
}